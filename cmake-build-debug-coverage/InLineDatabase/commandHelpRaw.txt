Command=Result	
location=Display the current intersection where the program is located.
change @=Change the current intersection to the one specified by the symbol @.
neighbours=Display all neighboring intersections of the current intersection.
move @=Move from the current to the one specified by the symbol @ and displays the path. If there is no path - not changing current intersection.
close @=Add the intersection specified by the symbol @ to the list of closed intersections.
open @=Remove the intersection specified by the symbol @ from the list of closed intersections.
closed=Display all closed intersections.
tour=Display a tourist route through the city.
help=Provides you with this list.
help2=Provides you with help2 list.
exit=Exits the app.

=OTHER COMMANDS := FUNCTIONALITY OF TASKS
1=exists @1 @2=Checks if there is a path between two given graphs using a depth-first search approach.
2=paths @1 @2=Finds the paths between two graphs.
3=paths @1 @2 closed=Finds the paths between two graphs, considering closed edges.
4=canReturnTo=Checks if it's possible to return to the starting graph after going out.
5=hamiltonianPath=(SAME AS "tour")
6=canReachAllNodes=Checks if it's possible to reach all nodes from a given starting graph.
7=findAllDeadEnded=Finds all dead-ended streets (edges that lead to a node with no outgoing edges).

https://ozh.github.io/ascii-tables/