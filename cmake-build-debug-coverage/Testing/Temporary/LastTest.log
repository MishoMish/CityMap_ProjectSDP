Start testing: Jan 02 18:33 EET
----------------------------------------------------------
1/6 Testing: GraphContainerTest
1/6 Test: GraphContainerTest
Command: "/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/GraphContainerTest"
Directory: /Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage
"GraphContainerTest" start time: Jan 02 18:33 EET
Output:
----------------------------------------------------------
[doctest] doctest version is "2.4.11"
[doctest] run with "--help" for options
--- --- --- --- ---
1 0x600003120240 : 
 --- 
===============================================================================
[doctest] test cases:  1 |  1 passed | 0 failed | 0 skipped
[doctest] assertions: 23 | 23 passed | 0 failed |
[doctest] Status: SUCCESS!
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"GraphContainerTest" end time: Jan 02 18:33 EET
"GraphContainerTest" time elapsed: 00:00:00
----------------------------------------------------------

2/6 Testing: GraphTest
2/6 Test: GraphTest
Command: "/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/GraphTest"
Directory: /Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage
"GraphTest" start time: Jan 02 18:33 EET
Output:
----------------------------------------------------------
[doctest] doctest version is "2.4.11"
[doctest] run with "--help" for options
2 -> 1
===============================================================================
[doctest] test cases: 1 | 1 passed | 0 failed | 0 skipped
[doctest] assertions: 6 | 6 passed | 0 failed |
[doctest] Status: SUCCESS!
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"GraphTest" end time: Jan 02 18:33 EET
"GraphTest" time elapsed: 00:00:00
----------------------------------------------------------

3/6 Testing: GraphvizControllerTest
3/6 Test: GraphvizControllerTest
Command: "/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/GraphvizControllerTest"
Directory: /Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage
"GraphvizControllerTest" start time: Jan 02 18:33 EET
Output:
----------------------------------------------------------
[doctest] doctest version is "2.4.11"
[doctest] run with "--help" for options
===============================================================================
[doctest] test cases: 1 | 1 passed | 0 failed | 0 skipped
[doctest] assertions: 2 | 2 passed | 0 failed |
[doctest] Status: SUCCESS!
<end of output>
Test time =   0.22 sec
----------------------------------------------------------
Test Passed.
"GraphvizControllerTest" end time: Jan 02 18:33 EET
"GraphvizControllerTest" time elapsed: 00:00:00
----------------------------------------------------------

4/6 Testing: PathTest
4/6 Test: PathTest
Command: "/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/PathTest"
Directory: /Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage
"PathTest" start time: Jan 02 18:33 EET
Output:
----------------------------------------------------------
[doctest] doctest version is "2.4.11"
[doctest] run with "--help" for options
===============================================================================
[doctest] test cases: 1 | 1 passed | 0 failed | 0 skipped
[doctest] assertions: 8 | 8 passed | 0 failed |
[doctest] Status: SUCCESS!
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"PathTest" end time: Jan 02 18:33 EET
"PathTest" time elapsed: 00:00:00
----------------------------------------------------------

5/6 Testing: RouteCheckerTest
5/6 Test: RouteCheckerTest
Command: "/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/RouteCheckerTest"
Directory: /Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage
"RouteCheckerTest" start time: Jan 02 18:33 EET
Output:
----------------------------------------------------------
[doctest] doctest version is "2.4.11"
[doctest] run with "--help" for options
===============================================================================
[doctest] test cases:  1 |  1 passed | 0 failed | 0 skipped
[doctest] assertions: 25 | 25 passed | 0 failed |
[doctest] Status: SUCCESS!
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"RouteCheckerTest" end time: Jan 02 18:33 EET
"RouteCheckerTest" time elapsed: 00:00:00
----------------------------------------------------------

6/6 Testing: TerminalProgramTest
6/6 Test: TerminalProgramTest
Command: "/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/TerminalProgramTest"
Directory: /Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage
"TerminalProgramTest" start time: Jan 02 18:33 EET
Output:
----------------------------------------------------------
[doctest] doctest version is "2.4.11"
[doctest] run with "--help" for options
===========================================================================================================
                             ________      ___      _________     ___    ___
                            |\   ____\    |\  \    |\___   ___\  |\  \  /  /|
                            \ \  \___|    \ \  \   \|___ \  \_|  \ \  \/  / /
                             \ \  \        \ \  \       \ \  \    \ \    / /
                              \ \  \____    \ \  \       \ \  \    \/  /  /
                               \ \_______\   \ \__\       \ \__\ __/  / /
                                \|_______|    \|__|        \|__||\___/ /
                                                                \|___|/

                                 _____ ______       ________      ________
                                |\   _ \  _   \    |\   __  \    |\   __  \
                                \ \  \\\__\ \  \   \ \  \|\  \   \ \  \|\  \
                                 \ \  \\|__| \  \   \ \   __  \   \ \   ____\
                                  \ \  \    \ \  \   \ \  \ \  \   \ \  \___|
                                   \ \__\    \ \__\   \ \__\ \__\   \ \__\
                                    \|__|     \|__|    \|__|\|__|    \|__|
===========================================================================================================
        ____                                 __  ___    _     __              _     __           ____
       / __ )   __  __          _           /  |/  /   (_)   / /_   ____ _   (_)   / /          / __ \
      / __  |  / / / /         (_)         / /|_/ /   / /   / __ \ / __ `/  / /   / /          / / / /
     / /_/ /  / /_/ /         _           / /  / /   / /   / / / // /_/ /  / /   / /          / /_/ /  _
    /_____/   \__, /         (_)         /_/  /_/   /_/   /_/ /_/ \__,_/  /_/   /_/          /_____/  (_)
             /____/
===========================================================================================================
===========================================================================================================
                             ________      ___      _________     ___    ___
                            |\   ____\    |\  \    |\___   ___\  |\  \  /  /|
                            \ \  \___|    \ \  \   \|___ \  \_|  \ \  \/  / /
                             \ \  \        \ \  \       \ \  \    \ \    / /
                              \ \  \____    \ \  \       \ \  \    \/  /  /
                               \ \_______\   \ \__\       \ \__\ __/  / /
                                \|_______|    \|__|        \|__||\___/ /
                                                                \|___|/

                                 _____ ______       ________      ________
                                |\   _ \  _   \    |\   __  \    |\   __  \
                                \ \  \\\__\ \  \   \ \  \|\  \   \ \  \|\  \
                                 \ \  \\|__| \  \   \ \   __  \   \ \   ____\
                                  \ \  \    \ \  \   \ \  \ \  \   \ \  \___|
                                   \ \__\    \ \__\   \ \__\ \__\   \ \__\
                                    \|__|     \|__|    \|__|\|__|    \|__|
===========================================================================================================
        ____                                 __  ___    _     __              _     __           ____
       / __ )   __  __          _           /  |/  /   (_)   / /_   ____ _   (_)   / /          / __ \
      / __  |  / / / /         (_)         / /|_/ /   / /   / __ \ / __ `/  / /   / /          / / / /
     / /_/ /  / /_/ /         _           / /  / /   / /   / / / // /_/ /  / /   / /          / /_/ /  _
    /_____/   \__, /         (_)         /_/  /_/   /_/   /_/ /_/ \__,_/  /_/   /_/          /_____/  (_)
             /____/
===========================================================================================================
+============+============================================================================================================================================+
|  Command   |                                                                   Result                                                                   |
+============+============================================================================================================================================+
| location   | Display the current intersection where the program is located.                                                                             |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| change @   | Change the current intersection to the one specified by the symbol @.                                                                      |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| neighbours | Display all neighboring intersections of the current intersection.                                                                         |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| move @     | Move from the current to the one specified by the symbol @ and displays the path. If there is no path - not changing current intersection. |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| close @    | Add the intersection specified by the symbol @ to the list of closed intersections.                                                        |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| open @     | Remove the intersection specified by the symbol @ from the list of closed intersections.                                                   |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| closed     | Display all closed intersections.                                                                                                          |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| tour       | Display a tourist route through the city.                                                                                                  |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| help       | Provides you with this list.                                                                                                               |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| help2      | Provides you with help2 list.                                                                                                              |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| exit       | Exits the app.                                                                                                                             |
+------------+--------------------------------------------------------------------------------------------------------------------------------------------+
+===+====================+=========================================================================================+
|   |  OTHER COMMANDS :  |                                  FUNCTIONALITY OF TASKS                                 |
+===+====================+=========================================================================================+
| 1 | exists @1 @2       | Checks if there is a path between two given graphs using a depth-first search approach. |
+---+--------------------+-----------------------------------------------------------------------------------------+
| 2 | paths @1 @2        | Finds the paths between two graphs.                                                     |
+---+--------------------+-----------------------------------------------------------------------------------------+
| 3 | canReturnTo        | Checks if it's possible to return to the starting graph after going out.                |
+---+--------------------+-----------------------------------------------------------------------------------------+
| 4 | hamiltonianPath    | (SAME AS "tour")                                                                        |
+---+--------------------+-----------------------------------------------------------------------------------------+
| 5 | canReachAllNodes   | Checks if it's possible to reach all nodes from a given starting graph.                 |
+---+--------------------+-----------------------------------------------------------------------------------------+
| 6 | deadEnds           | Finds all dead-ended streets (edges that lead to a node with no outgoing edges).        |
+---+--------------------+-----------------------------------------------------------------------------------------+
| 7 | visual             | Creates a visual representation of the city.                                            |
+---+--------------------+-----------------------------------------------------------------------------------------+
Location changed to: 1
Invalid location: InvalidLocation
Closed location: 2
Closed location: 3
===============================================================================
[doctest] test cases:  1 |  1 passed | 0 failed | 0 skipped
[doctest] assertions: 17 | 17 passed | 0 failed |
[doctest] Status: SUCCESS!
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"TerminalProgramTest" end time: Jan 02 18:33 EET
"TerminalProgramTest" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Jan 02 18:33 EET
