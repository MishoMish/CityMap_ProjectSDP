        -:    0:Source:/Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__algorithm/all_of.h
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/CityMapLibrary.dir/TaskFunctions/RouteChecker.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/CityMapLibrary.dir/TaskFunctions/RouteChecker.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// -*- C++ -*-
        -:    2://===----------------------------------------------------------------------===//
        -:    3://
        -:    4:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    5:// See https://llvm.org/LICENSE.txt for license information.
        -:    6:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    7://
        -:    8://===----------------------------------------------------------------------===//
        -:    9:
        -:   10:#ifndef _LIBCPP___ALGORITHM_ALL_OF_H
        -:   11:#define _LIBCPP___ALGORITHM_ALL_OF_H
        -:   12:
        -:   13:#include <__config>
        -:   14:
        -:   15:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   16:#  pragma GCC system_header
        -:   17:#endif
        -:   18:
        -:   19:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   20:
        -:   21:template <class _InputIterator, class _Predicate>
        -:   22:_LIBCPP_NODISCARD_EXT inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 bool
function _ZNSt3__16all_ofB6v15006INS_25__hash_map_const_iteratorINS_21__hash_const_iteratorIPNS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP5GraphEEPvEEEEEEZN12RouteChecker19hamiltonianPathUtilEP14GraphContainerSC_SC_P4PathRNS_3setINS_4pairISC_SC_EENS_4lessISQ_EENS8_ISQ_EEEERbE3$_1EEbT_SY_T0_ called 11 returned 100% blocks executed 100%
       11:   23:all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred) {
       20:   24:  for (; __first != __last; ++__first)
       11:   24-block  0
       20:   24-block  1
branch  0 taken 18
branch  1 taken 2
        9:   24-block  2
       18:   25:    if (!__pred(*__first))
       18:   25-block  0
branch  0 taken 9
branch  1 taken 9
        9:   25-block  1
        9:   26:      return false;
        9:   26-block  0
        2:   27:  return true;
        2:   27-block  0
       11:   28:}
       11:   28-block  0
        -:   29:
        -:   30:_LIBCPP_END_NAMESPACE_STD
        -:   31:
        -:   32:#endif // _LIBCPP___ALGORITHM_ALL_OF_H
