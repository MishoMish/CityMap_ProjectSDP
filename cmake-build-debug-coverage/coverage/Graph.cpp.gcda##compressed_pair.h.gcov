        -:    0:Source:/Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__memory/compressed_pair.h
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/CityMapLibrary.dir/Structure/Graph.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/CityMapLibrary.dir/Structure/Graph.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// -*- C++ -*-
        -:    2://===----------------------------------------------------------------------===//
        -:    3://
        -:    4:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    5:// See https://llvm.org/LICENSE.txt for license information.
        -:    6:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    7://
        -:    8://===----------------------------------------------------------------------===//
        -:    9:
        -:   10:#ifndef _LIBCPP___MEMORY_COMPRESSED_PAIR_H
        -:   11:#define _LIBCPP___MEMORY_COMPRESSED_PAIR_H
        -:   12:
        -:   13:#include <__config>
        -:   14:#include <__utility/forward.h>
        -:   15:#include <__utility/move.h>
        -:   16:#include <tuple> // needed in c++03 for some constructors
        -:   17:#include <type_traits>
        -:   18:
        -:   19:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   20:#  pragma GCC system_header
        -:   21:#endif
        -:   22:
        -:   23:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   24:
        -:   25:// Tag used to default initialize one or both of the pair's elements.
        -:   26:struct __default_init_tag {};
        -:   27:struct __value_init_tag {};
        -:   28:
        -:   29:template <class _Tp, int _Idx, bool _CanBeEmptyBase = is_empty<_Tp>::value && !__libcpp_is_final<_Tp>::value>
        -:   30:struct __compressed_pair_elem {
        -:   31:  using _ParamT = _Tp;
        -:   32:  using reference = _Tp&;
        -:   33:  using const_reference = const _Tp&;
        -:   34:
function _ZNSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EEC2B6v15006ENS_18__default_init_tagE called 0 returned 0% blocks executed 0%
    #####:   35:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(__default_init_tag) {}
    $$$$$:   35-block  0
function _ZNSt3__122__compressed_pair_elemIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEELi0ELb0EEC2B6v15006ENS_16__value_init_tagE called 76 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_25__bucket_list_deallocatorINS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEEEELi1ELb0EEC2B6v15006ENS_16__value_init_tagE called 76 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEELi0ELb0EEC2B6v15006ENS_16__value_init_tagE called 76 returned 100% blocks executed 100%
      228:   36:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(__value_init_tag) : __value_() {}
       76:   36-block  0
       76:   36-block  1
       76:   36-block  2
        -:   37:
        -:   38:  template <class _Up, class = __enable_if_t<!is_same<__compressed_pair_elem, typename decay<_Up>::type>::value> >
        -:   39:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
function _ZNSt3__122__compressed_pair_elemImLi0ELb0EEC2B6v15006IivEEOT_ called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemIfLi0ELb0EEC2B6v15006IfvEEOT_ called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEELi0ELb0EEC2B6v15006IRS8_vEEOT_ called 48 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_22__hash_node_destructorINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEELi1ELb0EEC2B6v15006ISB_vEEOT_ called 48 returned 100% blocks executed 100%
       96:   40:  explicit __compressed_pair_elem(_Up&& __u) : __value_(std::forward<_Up>(__u)) {}
    $$$$$:   40-block  0
    $$$$$:   40-block  1
       48:   40-block  2
       48:   40-block  3
        -:   41:
        -:   42:#ifndef _LIBCPP_CXX03_LANG
        -:   43:  template <class... _Args, size_t... _Indices>
        -:   44:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX14
        -:   45:  explicit __compressed_pair_elem(piecewise_construct_t, tuple<_Args...> __args, __tuple_indices<_Indices...>)
        -:   46:      : __value_(std::forward<_Args>(std::get<_Indices>(__args))...) {}
        -:   47:#endif
        -:   48:
function _ZNSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemINS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEELi0ELb0EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemINS_22__hash_node_destructorINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEELi1ELb0EE5__getB6v15006Ev called 48 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemImLi0ELb0EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemIfLi0ELb0EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemINS_25__bucket_list_deallocatorINS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEEEELi1ELb0EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEELi0ELb0EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEELi0ELb0EE5__getB6v15006Ev called 192 returned 100% blocks executed 100%
      240:   49:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 reference __get() _NOEXCEPT { return __value_; }
    $$$$$:   49-block  0
    $$$$$:   49-block  1
       48:   49-block  2
    $$$$$:   49-block  3
    $$$$$:   49-block  4
    $$$$$:   49-block  5
    $$$$$:   49-block  6
      192:   49-block  7
function _ZNKSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__122__compressed_pair_elemINS_25__bucket_list_deallocatorINS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEEEELi1ELb0EE5__getB6v15006Ev called 108 returned 100% blocks executed 100%
function _ZNKSt3__122__compressed_pair_elemImLi0ELb0EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__122__compressed_pair_elemIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEELi0ELb0EE5__getB6v15006Ev called 172 returned 100% blocks executed 100%
function _ZNKSt3__122__compressed_pair_elemIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEELi0ELb0EE5__getB6v15006Ev called 294 returned 100% blocks executed 100%
      574:   50:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR const_reference __get() const _NOEXCEPT { return __value_; }
    $$$$$:   50-block  0
      108:   50-block  1
    $$$$$:   50-block  2
      172:   50-block  3
      294:   50-block  4
        -:   51:
        -:   52:private:
        -:   53:  _Tp __value_;
        -:   54:};
        -:   55:
        -:   56:template <class _Tp, int _Idx>
        -:   57:struct __compressed_pair_elem<_Tp, _Idx, true> : private _Tp {
        -:   58:  using _ParamT = _Tp;
        -:   59:  using reference = _Tp&;
        -:   60:  using const_reference = const _Tp&;
        -:   61:  using __value_type = _Tp;
        -:   62:
        -:   63:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem() = default;
function _ZNSt3__122__compressed_pair_elemINS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEELi1ELb1EEC2B6v15006ENS_18__default_init_tagE called 76 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_22__unordered_map_hasherIP5GraphNS_17__hash_value_typeIS3_dEENS_4hashIS3_EENS_8equal_toIS3_EELb1EEELi1ELb1EEC2B6v15006ENS_18__default_init_tagE called 76 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_21__unordered_map_equalIP5GraphNS_17__hash_value_typeIS3_dEENS_8equal_toIS3_EENS_4hashIS3_EELb1EEELi1ELb1EEC2B6v15006ENS_18__default_init_tagE called 76 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_9allocatorIcEELi1ELb1EEC2B6v15006ENS_18__default_init_tagE called 0 returned 0% blocks executed 0%
      228:   64:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(__default_init_tag) {}
       76:   64-block  0
       76:   64-block  1
       76:   64-block  2
    $$$$$:   64-block  3
function _ZNSt3__122__compressed_pair_elemINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEELi1ELb1EEC2B6v15006ENS_16__value_init_tagE called 76 returned 100% blocks executed 100%
       76:   65:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(__value_init_tag) : __value_type() {}
       76:   65-block  0
        -:   66:
        -:   67:  template <class _Up, class = __enable_if_t<!is_same<__compressed_pair_elem, typename decay<_Up>::type>::value> >
        -:   68:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:   69:  explicit __compressed_pair_elem(_Up&& __u) : __value_type(std::forward<_Up>(__u)) {}
        -:   70:
        -:   71:#ifndef _LIBCPP_CXX03_LANG
        -:   72:  template <class... _Args, size_t... _Indices>
        -:   73:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX14
        -:   74:  __compressed_pair_elem(piecewise_construct_t, tuple<_Args...> __args, __tuple_indices<_Indices...>)
        -:   75:      : __value_type(std::forward<_Args>(std::get<_Indices>(__args))...) {}
        -:   76:#endif
        -:   77:
function _ZNSt3__122__compressed_pair_elemINS_22__unordered_map_hasherIP5GraphNS_17__hash_value_typeIS3_dEENS_4hashIS3_EENS_8equal_toIS3_EELb1EEELi1ELb1EE5__getB6v15006Ev called 48 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_21__unordered_map_equalIP5GraphNS_17__hash_value_typeIS3_dEENS_8equal_toIS3_EENS_4hashIS3_EELb1EEELi1ELb1EE5__getB6v15006Ev called 10 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEELi1ELb1EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__122__compressed_pair_elemINS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEELi1ELb1EE5__getB6v15006Ev called 0 returned 0% blocks executed 0%
       58:   78:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 reference __get() _NOEXCEPT { return *this; }
       48:   78-block  0
       10:   78-block  1
    $$$$$:   78-block  2
    $$$$$:   78-block  3
        -:   79:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR const_reference __get() const _NOEXCEPT { return *this; }
        -:   80:};
        -:   81:
        -:   82:template <class _T1, class _T2>
        -:   83:class __compressed_pair : private __compressed_pair_elem<_T1, 0>,
        -:   84:                          private __compressed_pair_elem<_T2, 1> {
        -:   85:public:
        -:   86:  // NOTE: This static assert should never fire because __compressed_pair
        -:   87:  // is *almost never* used in a scenario where it's possible for T1 == T2.
        -:   88:  // (The exception is std::function where it is possible that the function
        -:   89:  //  object and the allocator have the same type).
        -:   90:  static_assert((!is_same<_T1, _T2>::value),
        -:   91:    "__compressed_pair cannot be instantiated when T1 and T2 are the same type; "
        -:   92:    "The current implementation is NOT ABI-compatible with the previous implementation for this configuration");
        -:   93:
        -:   94:  using _Base1 _LIBCPP_NODEBUG = __compressed_pair_elem<_T1, 0>;
        -:   95:  using _Base2 _LIBCPP_NODEBUG = __compressed_pair_elem<_T2, 1>;
        -:   96:
        -:   97:  template <bool _Dummy = true,
        -:   98:    class = __enable_if_t<
        -:   99:        __dependent_type<is_default_constructible<_T1>, _Dummy>::value &&
        -:  100:        __dependent_type<is_default_constructible<_T2>, _Dummy>::value
        -:  101:    >
        -:  102:  >
        -:  103:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
function _ZNSt3__117__compressed_pairINS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_9allocatorIS8_EEEC1B6v15006ILb1EvEEv called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_9allocatorIS8_EEEC2B6v15006ILb1EvEEv called 76 returned 100% blocks executed 100%
      152:  104:  explicit __compressed_pair() : _Base1(__value_init_tag()), _Base2(__value_init_tag()) {}
       76:  104-block  0
       76:  104-block  1
        -:  105:
        -:  106:  template <class _U1, class _U2>
        -:  107:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
function _ZNSt3__117__compressed_pairImNS_22__unordered_map_hasherIP5GraphNS_17__hash_value_typeIS3_dEENS_4hashIS3_EENS_8equal_toIS3_EELb1EEEEC1B6v15006IiNS_18__default_init_tagEEEOT_OT0_ called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIfNS_21__unordered_map_equalIP5GraphNS_17__hash_value_typeIS3_dEENS_8equal_toIS3_EENS_4hashIS3_EELb1EEEEC1B6v15006IfNS_18__default_init_tagEEEOT_OT0_ called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_25__bucket_list_deallocatorINS_9allocatorISB_EEEEEC1B6v15006INS_16__value_init_tagESJ_EEOT_OT0_ called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_25__bucket_list_deallocatorINS_9allocatorISB_EEEEEC2B6v15006INS_16__value_init_tagESJ_EEOT_OT0_ called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairImNS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEEEC1B6v15006IiNS_18__default_init_tagEEEOT_OT0_ called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairImNS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEEEC2B6v15006IiNS_18__default_init_tagEEEOT_OT0_ called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairImNS_22__unordered_map_hasherIP5GraphNS_17__hash_value_typeIS3_dEENS_4hashIS3_EENS_8equal_toIS3_EELb1EEEEC2B6v15006IiNS_18__default_init_tagEEEOT_OT0_ called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIfNS_21__unordered_map_equalIP5GraphNS_17__hash_value_typeIS3_dEENS_8equal_toIS3_EENS_4hashIS3_EELb1EEEEC2B6v15006IfNS_18__default_init_tagEEEOT_OT0_ called 76 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC1B6v15006INS_18__default_init_tagESA_EEOT_OT0_ called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2B6v15006INS_18__default_init_tagESA_EEOT_OT0_ called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEENS_22__hash_node_destructorINS_9allocatorIS7_EEEEEC1B6v15006IRS8_SC_EEOT_OT0_ called 48 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEENS_22__hash_node_destructorINS_9allocatorIS7_EEEEEC2B6v15006IRS8_SC_EEOT_OT0_ called 48 returned 100% blocks executed 100%
      704:  108:  explicit __compressed_pair(_U1&& __t1, _U2&& __t2) : _Base1(std::forward<_U1>(__t1)), _Base2(std::forward<_U2>(__t2)) {}
       76:  108-block  0
       76:  108-block  1
       76:  108-block  2
       76:  108-block  3
       76:  108-block  4
       76:  108-block  5
       76:  108-block  6
       76:  108-block  7
    $$$$$:  108-block  8
    $$$$$:  108-block  9
       48:  108-block 10
       48:  108-block 11
        -:  109:
        -:  110:#ifndef _LIBCPP_CXX03_LANG
        -:  111:  template <class... _Args1, class... _Args2>
        -:  112:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX14
        -:  113:  explicit __compressed_pair(piecewise_construct_t __pc, tuple<_Args1...> __first_args,
        -:  114:                             tuple<_Args2...> __second_args)
        -:  115:      : _Base1(__pc, std::move(__first_args), typename __make_tuple_indices<sizeof...(_Args1)>::type()),
        -:  116:        _Base2(__pc, std::move(__second_args), typename __make_tuple_indices<sizeof...(_Args2)>::type()) {}
        -:  117:#endif
        -:  118:
        -:  119:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
function _ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairINS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_9allocatorIS8_EEE5firstB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairImNS_22__unordered_map_hasherIP5GraphNS_17__hash_value_typeIS3_dEENS_4hashIS3_EENS_8equal_toIS3_EELb1EEEE5firstB6v15006Ev called 126 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIfNS_21__unordered_map_equalIP5GraphNS_17__hash_value_typeIS3_dEENS_8equal_toIS3_EENS_4hashIS3_EELb1EEEE5firstB6v15006Ev called 78 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_25__bucket_list_deallocatorINS_9allocatorISB_EEEEE5firstB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairImNS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEEE5firstB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEENS_22__hash_node_destructorINS_9allocatorIS7_EEEEE5firstB6v15006Ev called 192 returned 100% blocks executed 100%
      396:  120:  typename _Base1::reference first() _NOEXCEPT {
      396:  121:    return static_cast<_Base1&>(*this).__get();
    $$$$$:  121-block  0
    $$$$$:  121-block  1
      126:  121-block  2
       78:  121-block  3
    $$$$$:  121-block  4
    $$$$$:  121-block  5
      192:  121-block  6
        -:  122:  }
        -:  123:
        -:  124:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
function _ZNKSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__117__compressed_pairImNS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEEE5firstB6v15006Ev called 108 returned 100% blocks executed 100%
function _ZNKSt3__117__compressed_pairIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_25__bucket_list_deallocatorINS_9allocatorISB_EEEEE5firstB6v15006Ev called 172 returned 100% blocks executed 100%
function _ZNKSt3__117__compressed_pairIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEENS_22__hash_node_destructorINS_9allocatorIS7_EEEEE5firstB6v15006Ev called 294 returned 100% blocks executed 100%
      574:  125:  typename _Base1::const_reference first() const _NOEXCEPT {
      574:  126:    return static_cast<_Base1 const&>(*this).__get();
    $$$$$:  126-block  0
      108:  126-block  1
      172:  126-block  2
      294:  126-block  3
        -:  127:  }
        -:  128:
        -:  129:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
function _ZNSt3__117__compressed_pairImNS_22__unordered_map_hasherIP5GraphNS_17__hash_value_typeIS3_dEENS_4hashIS3_EENS_8equal_toIS3_EELb1EEEE6secondB6v15006Ev called 48 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIfNS_21__unordered_map_equalIP5GraphNS_17__hash_value_typeIS3_dEENS_8equal_toIS3_EENS_4hashIS3_EELb1EEEE6secondB6v15006Ev called 10 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_9allocatorIS8_EEE6secondB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEENS_22__hash_node_destructorINS_9allocatorIS7_EEEEE6secondB6v15006Ev called 48 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_25__bucket_list_deallocatorINS_9allocatorISB_EEEEE6secondB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairImNS_9allocatorIPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEEEEE6secondB6v15006Ev called 0 returned 0% blocks executed 0%
      106:  130:  typename _Base2::reference second() _NOEXCEPT {
      106:  131:    return static_cast<_Base2&>(*this).__get();
       48:  131-block  0
       10:  131-block  1
    $$$$$:  131-block  2
       48:  131-block  3
    $$$$$:  131-block  4
    $$$$$:  131-block  5
        -:  132:  }
        -:  133:
        -:  134:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
function _ZNKSt3__117__compressed_pairIPPNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIP5GraphdEEPvEEEENS_25__bucket_list_deallocatorINS_9allocatorISB_EEEEE6secondB6v15006Ev called 108 returned 100% blocks executed 100%
      108:  135:  typename _Base2::const_reference second() const _NOEXCEPT {
      108:  136:    return static_cast<_Base2 const&>(*this).__get();
      108:  136-block  0
        -:  137:  }
        -:  138:
        -:  139:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR static
        -:  140:  _Base1* __get_first_base(__compressed_pair* __pair) _NOEXCEPT {
        -:  141:    return static_cast<_Base1*>(__pair);
        -:  142:  }
        -:  143:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR static
        -:  144:  _Base2* __get_second_base(__compressed_pair* __pair) _NOEXCEPT {
        -:  145:    return static_cast<_Base2*>(__pair);
        -:  146:  }
        -:  147:
        -:  148:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:  149:  void swap(__compressed_pair& __x)
        -:  150:      _NOEXCEPT_(__is_nothrow_swappable<_T1>::value && __is_nothrow_swappable<_T2>::value) {
        -:  151:    using std::swap;
        -:  152:    swap(first(), __x.first());
        -:  153:    swap(second(), __x.second());
        -:  154:  }
        -:  155:};
        -:  156:
        -:  157:template <class _T1, class _T2>
        -:  158:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:  159:void swap(__compressed_pair<_T1, _T2>& __x, __compressed_pair<_T1, _T2>& __y)
        -:  160:    _NOEXCEPT_(__is_nothrow_swappable<_T1>::value && __is_nothrow_swappable<_T2>::value) {
        -:  161:  __x.swap(__y);
        -:  162:}
        -:  163:
        -:  164:_LIBCPP_END_NAMESPACE_STD
        -:  165:
        -:  166:#endif // _LIBCPP___MEMORY_COMPRESSED_PAIR_H
