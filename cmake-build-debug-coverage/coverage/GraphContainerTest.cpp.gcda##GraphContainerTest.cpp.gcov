        -:    0:Source:/Users/mihaildobroslavski/CLionProjects/CityMapProject/UnitTesting/GraphContainerTest.cpp
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/GraphContainerTest.dir/UnitTesting/GraphContainerTest.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/GraphContainerTest.dir/UnitTesting/GraphContainerTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by Mihail Dobroslavski on 30.12.23.
        -:    3://
        -:    4:
        -:    5:#define DOCTEST_CONFIG_IMPLEMENT
        -:    6:
        -:    7:#include "doctest.h"
        -:    8:#include "../Structure/GraphContainer.h"
        -:    9:
function _ZL20DOCTEST_ANON_FUNC_14v called 8 returned 100% blocks executed 52%
        9:   10:TEST_CASE("GraphContainer Test") {
        1:   10-block  0
branch  0 taken 1
branch  1 taken 0
        1:   10-block  1
branch  2 taken 1
branch  3 taken 0
        1:   10-block  2
branch  4 taken 1
branch  5 taken 0
        1:   10-block  3
    $$$$$:   10-block  4
    $$$$$:   10-block  5
    $$$$$:   10-block  6
    $$$$$:   10-block  7
        8:   11:    GraphContainer graphContainer;
        -:   12:
        9:   13:    SUBCASE("Parse File Test") {
        8:   13-block  0
branch  0 taken 8
branch  1 taken 0
        8:   13-block  1
branch  2 taken 8
branch  3 taken 0
        8:   13-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   13-block  3
    $$$$$:   13-block  4
        1:   14:        const std::string filePath = "/Users/mihaildobroslavski/CLionProjects/CityMap/cmake-build-debug/test_input.txt";
        1:   14-block  0
branch  0 taken 1
branch  1 taken 0
        1:   15:        graphContainer.parseFile(filePath);
        1:   15-block  0
branch  0 taken 1
branch  1 taken 0
        -:   16:
        1:   17:        REQUIRE(graphContainer.containsKey("1"));
        1:   17-block  0
        1:   17-block  1
branch  0 taken 1
branch  1 taken 0
        1:   17-block  2
branch  2 taken 1
branch  3 taken 0
        1:   17-block  3
branch  4 taken 1
branch  5 taken 0
        1:   17-block  4
branch  6 taken 1
branch  7 taken 0
        1:   17-block  5
branch  8 taken 1
branch  9 taken 0
        1:   17-block  6
branch 10 taken 1
branch 11 taken 0
        1:   17-block  7
branch 12 taken 1
branch 13 taken 0
        1:   17-block  8
    $$$$$:   17-block  9
    $$$$$:   17-block 10
    $$$$$:   17-block 11
    $$$$$:   17-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   17-block 13
branch 16 never executed
branch 17 never executed
    $$$$$:   17-block 14
        1:   17-block 15
branch 18 taken 1
branch 19 taken 0
        1:   17-block 16
branch 20 taken 0
branch 21 taken 1
    $$$$$:   17-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   17-block 18
    $$$$$:   17-block 19
branch 24 never executed
branch 25 never executed
    $$$$$:   17-block 20
        1:   17-block 21
branch 26 taken 1
branch 27 taken 0
        1:   17-block 22
        1:   17-block 23
    $$$$$:   17-block 24
    $$$$$:   17-block 25
        1:   18:        REQUIRE(graphContainer.containsKey("2"));
        1:   18-block  0
        1:   18-block  1
branch  0 taken 1
branch  1 taken 0
        1:   18-block  2
branch  2 taken 1
branch  3 taken 0
        1:   18-block  3
branch  4 taken 1
branch  5 taken 0
        1:   18-block  4
branch  6 taken 1
branch  7 taken 0
        1:   18-block  5
branch  8 taken 1
branch  9 taken 0
        1:   18-block  6
branch 10 taken 1
branch 11 taken 0
        1:   18-block  7
branch 12 taken 1
branch 13 taken 0
        1:   18-block  8
    $$$$$:   18-block  9
    $$$$$:   18-block 10
    $$$$$:   18-block 11
    $$$$$:   18-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   18-block 13
branch 16 never executed
branch 17 never executed
    $$$$$:   18-block 14
        1:   18-block 15
branch 18 taken 1
branch 19 taken 0
        1:   18-block 16
branch 20 taken 0
branch 21 taken 1
    $$$$$:   18-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   18-block 18
    $$$$$:   18-block 19
branch 24 never executed
branch 25 never executed
    $$$$$:   18-block 20
        1:   18-block 21
branch 26 taken 1
branch 27 taken 0
        1:   18-block 22
        1:   18-block 23
    $$$$$:   18-block 24
        -:   19:
        1:   20:        Graph *graphA = graphContainer.getGraph("1");
        1:   20-block  0
branch  0 taken 1
branch  1 taken 0
        1:   20-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   20-block  2
        1:   21:        Graph *graphB = graphContainer.getGraph("2");
        1:   21-block  0
branch  0 taken 1
branch  1 taken 0
        1:   21-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   21-block  2
        -:   22:
        1:   23:        REQUIRE(graphA != nullptr);
        1:   23-block  0
        1:   23-block  1
branch  0 taken 1
branch  1 taken 0
        1:   23-block  2
branch  2 taken 1
branch  3 taken 0
        1:   23-block  3
branch  4 taken 1
branch  5 taken 0
        1:   23-block  4
branch  6 taken 1
branch  7 taken 0
        1:   23-block  5
branch  8 taken 1
branch  9 taken 0
        1:   23-block  6
    $$$$$:   23-block  7
    $$$$$:   23-block  8
    $$$$$:   23-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   23-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   23-block 11
        1:   23-block 12
branch 14 taken 1
branch 15 taken 0
        1:   23-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   23-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   23-block 15
    $$$$$:   23-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   23-block 17
        1:   23-block 18
branch 22 taken 1
branch 23 taken 0
        1:   23-block 19
        1:   23-block 20
    $$$$$:   23-block 21
        1:   24:        REQUIRE(graphB != nullptr);
        1:   24-block  0
        1:   24-block  1
branch  0 taken 1
branch  1 taken 0
        1:   24-block  2
branch  2 taken 1
branch  3 taken 0
        1:   24-block  3
branch  4 taken 1
branch  5 taken 0
        1:   24-block  4
branch  6 taken 1
branch  7 taken 0
        1:   24-block  5
branch  8 taken 1
branch  9 taken 0
        1:   24-block  6
    $$$$$:   24-block  7
    $$$$$:   24-block  8
    $$$$$:   24-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   24-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   24-block 11
        1:   24-block 12
branch 14 taken 1
branch 15 taken 0
        1:   24-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   24-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   24-block 15
    $$$$$:   24-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   24-block 17
        1:   24-block 18
branch 22 taken 1
branch 23 taken 0
        1:   24-block 19
        1:   24-block 20
    $$$$$:   24-block 21
        -:   25:
        1:   26:        const auto &adjListA = graphA->getAdjacencyList();
        1:   26-block  0
branch  0 taken 1
branch  1 taken 0
        1:   27:        REQUIRE(adjListA.size() == 1);
        1:   27-block  0
        1:   27-block  1
branch  0 taken 1
branch  1 taken 0
        1:   27-block  2
branch  2 taken 1
branch  3 taken 0
        1:   27-block  3
branch  4 taken 1
branch  5 taken 0
        1:   27-block  4
branch  6 taken 1
branch  7 taken 0
        1:   27-block  5
branch  8 taken 1
branch  9 taken 0
        1:   27-block  6
    $$$$$:   27-block  7
    $$$$$:   27-block  8
    $$$$$:   27-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   27-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   27-block 11
        1:   27-block 12
branch 14 taken 1
branch 15 taken 0
        1:   27-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   27-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   27-block 15
    $$$$$:   27-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   27-block 17
        1:   27-block 18
branch 22 taken 1
branch 23 taken 0
        1:   27-block 19
        1:   27-block 20
    $$$$$:   27-block 21
        1:   28:        REQUIRE(adjListA.begin()->first->getName() == "2");
        1:   28-block  0
        1:   28-block  1
branch  0 taken 1
branch  1 taken 0
        1:   28-block  2
branch  2 taken 1
branch  3 taken 0
        1:   28-block  3
branch  4 taken 1
branch  5 taken 0
        1:   28-block  4
branch  6 taken 1
branch  7 taken 0
        1:   28-block  5
branch  8 taken 1
branch  9 taken 0
        1:   28-block  6
branch 10 taken 1
branch 11 taken 0
        1:   28-block  7
branch 12 taken 1
branch 13 taken 0
        1:   28-block  8
    $$$$$:   28-block  9
    $$$$$:   28-block 10
    $$$$$:   28-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   28-block 12
branch 16 never executed
branch 17 never executed
    $$$$$:   28-block 13
        1:   28-block 14
branch 18 taken 1
branch 19 taken 0
        1:   28-block 15
branch 20 taken 0
branch 21 taken 1
    $$$$$:   28-block 16
branch 22 never executed
branch 23 never executed
    $$$$$:   28-block 17
    $$$$$:   28-block 18
branch 24 never executed
branch 25 never executed
    $$$$$:   28-block 19
        1:   28-block 20
branch 26 taken 1
branch 27 taken 0
        1:   28-block 21
        1:   28-block 22
    $$$$$:   28-block 23
        1:   29:        REQUIRE(adjListA.begin()->second == 50.0);
        1:   29-block  0
        1:   29-block  1
branch  0 taken 1
branch  1 taken 0
        1:   29-block  2
branch  2 taken 1
branch  3 taken 0
        1:   29-block  3
branch  4 taken 1
branch  5 taken 0
        1:   29-block  4
branch  6 taken 1
branch  7 taken 0
        1:   29-block  5
branch  8 taken 1
branch  9 taken 0
        1:   29-block  6
branch 10 taken 1
branch 11 taken 0
        1:   29-block  7
    $$$$$:   29-block  8
    $$$$$:   29-block  9
    $$$$$:   29-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   29-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   29-block 12
        1:   29-block 13
branch 16 taken 1
branch 17 taken 0
        1:   29-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   29-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   29-block 16
    $$$$$:   29-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   29-block 18
        1:   29-block 19
branch 24 taken 1
branch 25 taken 0
        1:   29-block 20
        1:   29-block 21
    $$$$$:   29-block 22
        1:   30:    }
        1:   30-block  0
    $$$$$:   30-block  1
        -:   31:
        9:   32:    SUBCASE("File Open Error Test") {
        8:   32-block  0
branch  0 taken 8
branch  1 taken 0
        8:   32-block  1
branch  2 taken 8
branch  3 taken 0
        8:   32-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   32-block  3
    $$$$$:   32-block  4
        1:   33:        const std::string filePath = "/nonexistent_path/nonexistent_file.txt";
        1:   33-block  0
branch  0 taken 1
branch  1 taken 0
        2:   34:        REQUIRE_THROWS(graphContainer.parseFile(filePath));
        1:   34-block  0
        1:   34-block  1
branch  0 taken 0
branch  1 taken 1
        1:   34-block  2
branch  2 taken 1
branch  3 taken 0
        1:   34-block  3
branch  4 taken 1
branch  5 taken 0
        1:   34-block  4
branch  6 taken 0
branch  7 taken 1
    $$$$$:   34-block  5
    $$$$$:   34-block  6
        1:   34-block  7
branch  8 taken 1
branch  9 taken 0
        1:   34-block  8
branch 10 taken 1
branch 11 taken 0
        1:   34-block  9
        1:   34-block 10
branch 12 taken 1
branch 13 taken 0
        1:   34-block 11
branch 14 taken 0
branch 15 taken 1
    $$$$$:   34-block 12
branch 16 never executed
branch 17 never executed
    $$$$$:   34-block 13
    $$$$$:   34-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   34-block 15
        1:   34-block 16
branch 20 taken 1
branch 21 taken 0
        1:   34-block 17
    $$$$$:   34-block 18
        1:   34-block 19
        1:   34-block 20
        1:   35:    }
        1:   35-block  0
    $$$$$:   35-block  1
        -:   36:
        9:   37:    SUBCASE("Contains a Key Test") {
        8:   37-block  0
branch  0 taken 8
branch  1 taken 0
        8:   37-block  1
branch  2 taken 8
branch  3 taken 0
        8:   37-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   37-block  3
    $$$$$:   37-block  4
        1:   38:        REQUIRE_FALSE(graphContainer.containsKey("NonExistent"));
        1:   38-block  0
        1:   38-block  1
branch  0 taken 1
branch  1 taken 0
        1:   38-block  2
branch  2 taken 1
branch  3 taken 0
        1:   38-block  3
branch  4 taken 1
branch  5 taken 0
        1:   38-block  4
branch  6 taken 1
branch  7 taken 0
        1:   38-block  5
branch  8 taken 1
branch  9 taken 0
        1:   38-block  6
branch 10 taken 1
branch 11 taken 0
        1:   38-block  7
branch 12 taken 1
branch 13 taken 0
        1:   38-block  8
    $$$$$:   38-block  9
    $$$$$:   38-block 10
    $$$$$:   38-block 11
    $$$$$:   38-block 12
    $$$$$:   38-block 13
branch 14 never executed
branch 15 never executed
    $$$$$:   38-block 14
branch 16 never executed
branch 17 never executed
    $$$$$:   38-block 15
        1:   38-block 16
branch 18 taken 1
branch 19 taken 0
        1:   38-block 17
branch 20 taken 0
branch 21 taken 1
    $$$$$:   38-block 18
branch 22 never executed
branch 23 never executed
    $$$$$:   38-block 19
    $$$$$:   38-block 20
branch 24 never executed
branch 25 never executed
    $$$$$:   38-block 21
        1:   38-block 22
branch 26 taken 1
branch 27 taken 0
        1:   38-block 23
        1:   38-block 24
    $$$$$:   38-block 25
        1:   39:    }
        1:   39-block  0
        -:   40:
        9:   41:    SUBCASE("Add Graph Test") {
        8:   41-block  0
branch  0 taken 8
branch  1 taken 0
        8:   41-block  1
branch  2 taken 8
branch  3 taken 0
        8:   41-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   41-block  3
    $$$$$:   41-block  4
        1:   42:        graphContainer.addGraph("1");
        1:   42-block  0
branch  0 taken 1
branch  1 taken 0
        1:   42-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   42-block  2
        1:   43:        REQUIRE(graphContainer.containsKey("1"));
        1:   43-block  0
        1:   43-block  1
branch  0 taken 1
branch  1 taken 0
        1:   43-block  2
branch  2 taken 1
branch  3 taken 0
        1:   43-block  3
branch  4 taken 1
branch  5 taken 0
        1:   43-block  4
branch  6 taken 1
branch  7 taken 0
        1:   43-block  5
branch  8 taken 1
branch  9 taken 0
        1:   43-block  6
branch 10 taken 1
branch 11 taken 0
        1:   43-block  7
branch 12 taken 1
branch 13 taken 0
        1:   43-block  8
    $$$$$:   43-block  9
    $$$$$:   43-block 10
    $$$$$:   43-block 11
    $$$$$:   43-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   43-block 13
branch 16 never executed
branch 17 never executed
    $$$$$:   43-block 14
        1:   43-block 15
branch 18 taken 1
branch 19 taken 0
        1:   43-block 16
branch 20 taken 0
branch 21 taken 1
    $$$$$:   43-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   43-block 18
    $$$$$:   43-block 19
branch 24 never executed
branch 25 never executed
    $$$$$:   43-block 20
        1:   43-block 21
branch 26 taken 1
branch 27 taken 0
        1:   43-block 22
        1:   43-block 23
    $$$$$:   43-block 24
        1:   44:        REQUIRE(graphContainer.getGraph("1") != nullptr);
        1:   44-block  0
        1:   44-block  1
branch  0 taken 1
branch  1 taken 0
        1:   44-block  2
branch  2 taken 1
branch  3 taken 0
        1:   44-block  3
branch  4 taken 1
branch  5 taken 0
        1:   44-block  4
branch  6 taken 1
branch  7 taken 0
        1:   44-block  5
branch  8 taken 1
branch  9 taken 0
        1:   44-block  6
branch 10 taken 1
branch 11 taken 0
        1:   44-block  7
branch 12 taken 1
branch 13 taken 0
        1:   44-block  8
    $$$$$:   44-block  9
    $$$$$:   44-block 10
    $$$$$:   44-block 11
    $$$$$:   44-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   44-block 13
branch 16 never executed
branch 17 never executed
    $$$$$:   44-block 14
        1:   44-block 15
branch 18 taken 1
branch 19 taken 0
        1:   44-block 16
branch 20 taken 0
branch 21 taken 1
    $$$$$:   44-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   44-block 18
    $$$$$:   44-block 19
branch 24 never executed
branch 25 never executed
    $$$$$:   44-block 20
        1:   44-block 21
branch 26 taken 1
branch 27 taken 0
        1:   44-block 22
        1:   44-block 23
    $$$$$:   44-block 24
        1:   45:    }
        1:   45-block  0
        -:   46:
        9:   47:    SUBCASE("Get Graph Test") {
        8:   47-block  0
branch  0 taken 8
branch  1 taken 0
        8:   47-block  1
branch  2 taken 8
branch  3 taken 0
        8:   47-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   47-block  3
    $$$$$:   47-block  4
        1:   48:        REQUIRE(graphContainer.getGraph("NonExistent") == nullptr);
        1:   48-block  0
        1:   48-block  1
branch  0 taken 1
branch  1 taken 0
        1:   48-block  2
branch  2 taken 1
branch  3 taken 0
        1:   48-block  3
branch  4 taken 1
branch  5 taken 0
        1:   48-block  4
branch  6 taken 1
branch  7 taken 0
        1:   48-block  5
branch  8 taken 1
branch  9 taken 0
        1:   48-block  6
branch 10 taken 1
branch 11 taken 0
        1:   48-block  7
branch 12 taken 1
branch 13 taken 0
        1:   48-block  8
    $$$$$:   48-block  9
    $$$$$:   48-block 10
    $$$$$:   48-block 11
    $$$$$:   48-block 12
    $$$$$:   48-block 13
branch 14 never executed
branch 15 never executed
    $$$$$:   48-block 14
branch 16 never executed
branch 17 never executed
    $$$$$:   48-block 15
        1:   48-block 16
branch 18 taken 1
branch 19 taken 0
        1:   48-block 17
branch 20 taken 0
branch 21 taken 1
    $$$$$:   48-block 18
branch 22 never executed
branch 23 never executed
    $$$$$:   48-block 19
    $$$$$:   48-block 20
branch 24 never executed
branch 25 never executed
    $$$$$:   48-block 21
        1:   48-block 22
branch 26 taken 1
branch 27 taken 0
        1:   48-block 23
        1:   48-block 24
    $$$$$:   48-block 25
        1:   49:    }
        1:   49-block  0
        -:   50:
        9:   51:    SUBCASE("Get Graphs Test") {
        8:   51-block  0
branch  0 taken 8
branch  1 taken 0
        8:   51-block  1
branch  2 taken 8
branch  3 taken 0
        8:   51-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   51-block  3
    $$$$$:   51-block  4
        1:   52:        const auto &graphs = graphContainer.getGraphs();
        1:   52-block  0
branch  0 taken 1
branch  1 taken 0
        1:   53:        REQUIRE(graphs.size() == 0);
        1:   53-block  0
        1:   53-block  1
branch  0 taken 1
branch  1 taken 0
        1:   53-block  2
branch  2 taken 1
branch  3 taken 0
        1:   53-block  3
branch  4 taken 1
branch  5 taken 0
        1:   53-block  4
branch  6 taken 1
branch  7 taken 0
        1:   53-block  5
branch  8 taken 1
branch  9 taken 0
        1:   53-block  6
    $$$$$:   53-block  7
    $$$$$:   53-block  8
    $$$$$:   53-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   53-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   53-block 11
        1:   53-block 12
branch 14 taken 1
branch 15 taken 0
        1:   53-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   53-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   53-block 15
    $$$$$:   53-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   53-block 17
        1:   53-block 18
branch 22 taken 1
branch 23 taken 0
        1:   53-block 19
        1:   53-block 20
    $$$$$:   53-block 21
        -:   54:
        1:   55:        graphContainer.addGraph("1");
        1:   55-block  0
branch  0 taken 1
branch  1 taken 0
        1:   55-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   55-block  2
        1:   56:        graphContainer.addGraph("2");
        1:   56-block  0
branch  0 taken 1
branch  1 taken 0
        1:   56-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   56-block  2
        -:   57:
        1:   58:        const auto &newGraphs = graphContainer.getGraphs();
        1:   58-block  0
branch  0 taken 1
branch  1 taken 0
        1:   59:        REQUIRE(newGraphs.size() == 2);
        1:   59-block  0
        1:   59-block  1
branch  0 taken 1
branch  1 taken 0
        1:   59-block  2
branch  2 taken 1
branch  3 taken 0
        1:   59-block  3
branch  4 taken 1
branch  5 taken 0
        1:   59-block  4
branch  6 taken 1
branch  7 taken 0
        1:   59-block  5
branch  8 taken 1
branch  9 taken 0
        1:   59-block  6
    $$$$$:   59-block  7
    $$$$$:   59-block  8
    $$$$$:   59-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   59-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   59-block 11
        1:   59-block 12
branch 14 taken 1
branch 15 taken 0
        1:   59-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   59-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   59-block 15
    $$$$$:   59-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   59-block 17
        1:   59-block 18
branch 22 taken 1
branch 23 taken 0
        1:   59-block 19
        1:   59-block 20
    $$$$$:   59-block 21
        1:   60:        REQUIRE(newGraphs.find("1") != newGraphs.end());
        1:   60-block  0
        1:   60-block  1
branch  0 taken 1
branch  1 taken 0
        1:   60-block  2
branch  2 taken 1
branch  3 taken 0
        1:   60-block  3
branch  4 taken 1
branch  5 taken 0
        1:   60-block  4
branch  6 taken 1
branch  7 taken 0
        1:   60-block  5
branch  8 taken 1
branch  9 taken 0
        1:   60-block  6
branch 10 taken 1
branch 11 taken 0
        1:   60-block  7
branch 12 taken 0
branch 13 taken 1
        1:   60-block  8
    $$$$$:   60-block  9
    $$$$$:   60-block 10
    $$$$$:   60-block 11
    $$$$$:   60-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   60-block 13
branch 16 never executed
branch 17 never executed
    $$$$$:   60-block 14
        1:   60-block 15
branch 18 taken 1
branch 19 taken 0
        1:   60-block 16
branch 20 taken 0
branch 21 taken 1
    $$$$$:   60-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   60-block 18
    $$$$$:   60-block 19
branch 24 never executed
branch 25 never executed
    $$$$$:   60-block 20
        1:   60-block 21
branch 26 taken 1
branch 27 taken 0
        1:   60-block 22
        1:   60-block 23
    $$$$$:   60-block 24
        1:   61:        REQUIRE(newGraphs.find("2") != newGraphs.end());
        1:   61-block  0
        1:   61-block  1
branch  0 taken 1
branch  1 taken 0
        1:   61-block  2
branch  2 taken 1
branch  3 taken 0
        1:   61-block  3
branch  4 taken 1
branch  5 taken 0
        1:   61-block  4
branch  6 taken 1
branch  7 taken 0
        1:   61-block  5
branch  8 taken 1
branch  9 taken 0
        1:   61-block  6
branch 10 taken 1
branch 11 taken 0
        1:   61-block  7
branch 12 taken 1
branch 13 taken 0
        1:   61-block  8
    $$$$$:   61-block  9
    $$$$$:   61-block 10
    $$$$$:   61-block 11
    $$$$$:   61-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   61-block 13
branch 16 never executed
branch 17 never executed
    $$$$$:   61-block 14
        1:   61-block 15
branch 18 taken 1
branch 19 taken 0
        1:   61-block 16
branch 20 taken 0
branch 21 taken 1
    $$$$$:   61-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   61-block 18
    $$$$$:   61-block 19
branch 24 never executed
branch 25 never executed
    $$$$$:   61-block 20
        1:   61-block 21
branch 26 taken 1
branch 27 taken 0
        1:   61-block 22
        1:   61-block 23
    $$$$$:   61-block 24
        1:   62:    }
        1:   62-block  0
        -:   63:
        9:   64:    SUBCASE("Add Road Test") {
        8:   64-block  0
branch  0 taken 8
branch  1 taken 0
        8:   64-block  1
branch  2 taken 8
branch  3 taken 0
        8:   64-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   64-block  3
    $$$$$:   64-block  4
        1:   65:        graphContainer.addRoad("1", "2", 50.0);
        1:   65-block  0
branch  0 taken 1
branch  1 taken 0
        1:   65-block  1
branch  2 taken 1
branch  3 taken 0
        1:   65-block  2
branch  4 taken 1
branch  5 taken 0
    $$$$$:   65-block  3
    $$$$$:   65-block  4
        -:   66:
        1:   67:        REQUIRE(graphContainer.containsKey("1"));
        1:   67-block  0
        1:   67-block  1
branch  0 taken 1
branch  1 taken 0
        1:   67-block  2
branch  2 taken 1
branch  3 taken 0
        1:   67-block  3
branch  4 taken 1
branch  5 taken 0
        1:   67-block  4
branch  6 taken 1
branch  7 taken 0
        1:   67-block  5
branch  8 taken 1
branch  9 taken 0
        1:   67-block  6
branch 10 taken 1
branch 11 taken 0
        1:   67-block  7
branch 12 taken 1
branch 13 taken 0
        1:   67-block  8
    $$$$$:   67-block  9
    $$$$$:   67-block 10
    $$$$$:   67-block 11
    $$$$$:   67-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   67-block 13
branch 16 never executed
branch 17 never executed
    $$$$$:   67-block 14
        1:   67-block 15
branch 18 taken 1
branch 19 taken 0
        1:   67-block 16
branch 20 taken 0
branch 21 taken 1
    $$$$$:   67-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   67-block 18
    $$$$$:   67-block 19
branch 24 never executed
branch 25 never executed
    $$$$$:   67-block 20
        1:   67-block 21
branch 26 taken 1
branch 27 taken 0
        1:   67-block 22
        1:   67-block 23
    $$$$$:   67-block 24
        1:   68:        REQUIRE(graphContainer.containsKey("2"));
        1:   68-block  0
        1:   68-block  1
branch  0 taken 1
branch  1 taken 0
        1:   68-block  2
branch  2 taken 1
branch  3 taken 0
        1:   68-block  3
branch  4 taken 1
branch  5 taken 0
        1:   68-block  4
branch  6 taken 1
branch  7 taken 0
        1:   68-block  5
branch  8 taken 1
branch  9 taken 0
        1:   68-block  6
branch 10 taken 1
branch 11 taken 0
        1:   68-block  7
branch 12 taken 1
branch 13 taken 0
        1:   68-block  8
    $$$$$:   68-block  9
    $$$$$:   68-block 10
    $$$$$:   68-block 11
    $$$$$:   68-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   68-block 13
branch 16 never executed
branch 17 never executed
    $$$$$:   68-block 14
        1:   68-block 15
branch 18 taken 1
branch 19 taken 0
        1:   68-block 16
branch 20 taken 0
branch 21 taken 1
    $$$$$:   68-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   68-block 18
    $$$$$:   68-block 19
branch 24 never executed
branch 25 never executed
    $$$$$:   68-block 20
        1:   68-block 21
branch 26 taken 1
branch 27 taken 0
        1:   68-block 22
        1:   68-block 23
    $$$$$:   68-block 24
        -:   69:
        1:   70:        Graph *graphA = graphContainer.getGraph("1");
        1:   70-block  0
branch  0 taken 1
branch  1 taken 0
        1:   70-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   70-block  2
        1:   71:        Graph *graphB = graphContainer.getGraph("2");
        1:   71-block  0
branch  0 taken 1
branch  1 taken 0
        1:   71-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   71-block  2
        -:   72:
        1:   73:        REQUIRE(graphA != nullptr);
        1:   73-block  0
        1:   73-block  1
branch  0 taken 1
branch  1 taken 0
        1:   73-block  2
branch  2 taken 1
branch  3 taken 0
        1:   73-block  3
branch  4 taken 1
branch  5 taken 0
        1:   73-block  4
branch  6 taken 1
branch  7 taken 0
        1:   73-block  5
branch  8 taken 1
branch  9 taken 0
        1:   73-block  6
    $$$$$:   73-block  7
    $$$$$:   73-block  8
    $$$$$:   73-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   73-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   73-block 11
        1:   73-block 12
branch 14 taken 1
branch 15 taken 0
        1:   73-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   73-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   73-block 15
    $$$$$:   73-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   73-block 17
        1:   73-block 18
branch 22 taken 1
branch 23 taken 0
        1:   73-block 19
        1:   73-block 20
    $$$$$:   73-block 21
        1:   74:        REQUIRE(graphB != nullptr);
        1:   74-block  0
        1:   74-block  1
branch  0 taken 1
branch  1 taken 0
        1:   74-block  2
branch  2 taken 1
branch  3 taken 0
        1:   74-block  3
branch  4 taken 1
branch  5 taken 0
        1:   74-block  4
branch  6 taken 1
branch  7 taken 0
        1:   74-block  5
branch  8 taken 1
branch  9 taken 0
        1:   74-block  6
    $$$$$:   74-block  7
    $$$$$:   74-block  8
    $$$$$:   74-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   74-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   74-block 11
        1:   74-block 12
branch 14 taken 1
branch 15 taken 0
        1:   74-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   74-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   74-block 15
    $$$$$:   74-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   74-block 17
        1:   74-block 18
branch 22 taken 1
branch 23 taken 0
        1:   74-block 19
        1:   74-block 20
    $$$$$:   74-block 21
        -:   75:
        1:   76:        const auto &adjListA = graphA->getAdjacencyList();
        1:   76-block  0
branch  0 taken 1
branch  1 taken 0
        1:   77:        REQUIRE(adjListA.size() == 1);
        1:   77-block  0
        1:   77-block  1
branch  0 taken 1
branch  1 taken 0
        1:   77-block  2
branch  2 taken 1
branch  3 taken 0
        1:   77-block  3
branch  4 taken 1
branch  5 taken 0
        1:   77-block  4
branch  6 taken 1
branch  7 taken 0
        1:   77-block  5
branch  8 taken 1
branch  9 taken 0
        1:   77-block  6
    $$$$$:   77-block  7
    $$$$$:   77-block  8
    $$$$$:   77-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   77-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   77-block 11
        1:   77-block 12
branch 14 taken 1
branch 15 taken 0
        1:   77-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   77-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   77-block 15
    $$$$$:   77-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   77-block 17
        1:   77-block 18
branch 22 taken 1
branch 23 taken 0
        1:   77-block 19
        1:   77-block 20
    $$$$$:   77-block 21
        1:   78:        REQUIRE(adjListA.begin()->first->getName() == "2");
        1:   78-block  0
        1:   78-block  1
branch  0 taken 1
branch  1 taken 0
        1:   78-block  2
branch  2 taken 1
branch  3 taken 0
        1:   78-block  3
branch  4 taken 1
branch  5 taken 0
        1:   78-block  4
branch  6 taken 1
branch  7 taken 0
        1:   78-block  5
branch  8 taken 1
branch  9 taken 0
        1:   78-block  6
branch 10 taken 1
branch 11 taken 0
        1:   78-block  7
branch 12 taken 1
branch 13 taken 0
        1:   78-block  8
    $$$$$:   78-block  9
    $$$$$:   78-block 10
    $$$$$:   78-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   78-block 12
branch 16 never executed
branch 17 never executed
    $$$$$:   78-block 13
        1:   78-block 14
branch 18 taken 1
branch 19 taken 0
        1:   78-block 15
branch 20 taken 0
branch 21 taken 1
    $$$$$:   78-block 16
branch 22 never executed
branch 23 never executed
    $$$$$:   78-block 17
    $$$$$:   78-block 18
branch 24 never executed
branch 25 never executed
    $$$$$:   78-block 19
        1:   78-block 20
branch 26 taken 1
branch 27 taken 0
        1:   78-block 21
        1:   78-block 22
    $$$$$:   78-block 23
        1:   79:        REQUIRE(adjListA.begin()->second == 50.0);
        1:   79-block  0
        1:   79-block  1
branch  0 taken 1
branch  1 taken 0
        1:   79-block  2
branch  2 taken 1
branch  3 taken 0
        1:   79-block  3
branch  4 taken 1
branch  5 taken 0
        1:   79-block  4
branch  6 taken 1
branch  7 taken 0
        1:   79-block  5
branch  8 taken 1
branch  9 taken 0
        1:   79-block  6
branch 10 taken 1
branch 11 taken 0
        1:   79-block  7
    $$$$$:   79-block  8
    $$$$$:   79-block  9
    $$$$$:   79-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   79-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   79-block 12
        1:   79-block 13
branch 16 taken 1
branch 17 taken 0
        1:   79-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   79-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   79-block 16
    $$$$$:   79-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   79-block 18
        1:   79-block 19
branch 24 taken 1
branch 25 taken 0
        1:   79-block 20
        1:   79-block 21
    $$$$$:   79-block 22
        1:   80:    }
        1:   80-block  0
        -:   81:
        9:   82:    SUBCASE("Print Test") {
        8:   82-block  0
branch  0 taken 8
branch  1 taken 0
        8:   82-block  1
branch  2 taken 8
branch  3 taken 0
        8:   82-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   82-block  3
    $$$$$:   82-block  4
        1:   83:        graphContainer.addGraph("CityA");
        1:   83-block  0
branch  0 taken 1
branch  1 taken 0
        1:   83-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   83-block  2
        1:   84:        graphContainer.print();
        1:   84-block  0
branch  0 taken 1
branch  1 taken 0
        1:   85:    }
        1:   85-block  0
        9:   86:}
    $$$$$:   86-block  0
    $$$$$:   86-block  1
    $$$$$:   86-block  2
    $$$$$:   86-block  3
    $$$$$:   86-block  4
    $$$$$:   86-block  5
    $$$$$:   86-block  6
    $$$$$:   86-block  7
    $$$$$:   86-block  8
    $$$$$:   86-block  9
    $$$$$:   86-block 10
    $$$$$:   86-block 11
    $$$$$:   86-block 12
    $$$$$:   86-block 13
    $$$$$:   86-block 14
    $$$$$:   86-block 15
    $$$$$:   86-block 16
    $$$$$:   86-block 17
    $$$$$:   86-block 18
    $$$$$:   86-block 19
    $$$$$:   86-block 20
        1:   86-block 21
    $$$$$:   86-block 22
    $$$$$:   86-block 23
    $$$$$:   86-block 24
    $$$$$:   86-block 25
    $$$$$:   86-block 26
    $$$$$:   86-block 27
    $$$$$:   86-block 28
    $$$$$:   86-block 29
    $$$$$:   86-block 30
    $$$$$:   86-block 31
    $$$$$:   86-block 32
    $$$$$:   86-block 33
    $$$$$:   86-block 34
    $$$$$:   86-block 35
    $$$$$:   86-block 36
    $$$$$:   86-block 37
    $$$$$:   86-block 38
    $$$$$:   86-block 39
    $$$$$:   86-block 40
    $$$$$:   86-block 41
    $$$$$:   86-block 42
    $$$$$:   86-block 43
    $$$$$:   86-block 44
    $$$$$:   86-block 45
    $$$$$:   86-block 46
    $$$$$:   86-block 47
    $$$$$:   86-block 48
    $$$$$:   86-block 49
    $$$$$:   86-block 50
    $$$$$:   86-block 51
    $$$$$:   86-block 52
    $$$$$:   86-block 53
    $$$$$:   86-block 54
    $$$$$:   86-block 55
    $$$$$:   86-block 56
    $$$$$:   86-block 57
    $$$$$:   86-block 58
    $$$$$:   86-block 59
    $$$$$:   86-block 60
    $$$$$:   86-block 61
    $$$$$:   86-block 62
    $$$$$:   86-block 63
    $$$$$:   86-block 64
    $$$$$:   86-block 65
        8:   86-block 66
    $$$$$:   86-block 67
    $$$$$:   86-block 68
        -:   87:
function main called 1 returned 100% blocks executed 50%
        1:   88:int main(int argc, char *argv[]) {
        1:   89:    doctest::Context context(argc, argv);
        1:   90:    return context.run();
        1:   90-block  0
branch  0 taken 1
branch  1 taken 0
        1:   91:}
        1:   91-block  0
    $$$$$:   91-block  1
    $$$$$:   91-block  2
