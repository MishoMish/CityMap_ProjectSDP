        -:    0:Source:/Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__algorithm/move.h
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/PathTest.dir/UnitTesting/PathTest.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/PathTest.dir/UnitTesting/PathTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://===----------------------------------------------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#ifndef _LIBCPP___ALGORITHM_MOVE_H
        -:   10:#define _LIBCPP___ALGORITHM_MOVE_H
        -:   11:
        -:   12:#include <__algorithm/iterator_operations.h>
        -:   13:#include <__algorithm/unwrap_iter.h>
        -:   14:#include <__config>
        -:   15:#include <__iterator/iterator_traits.h>
        -:   16:#include <__iterator/reverse_iterator.h>
        -:   17:#include <__utility/move.h>
        -:   18:#include <__utility/pair.h>
        -:   19:#include <cstring>
        -:   20:#include <type_traits>
        -:   21:
        -:   22:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   23:#  pragma GCC system_header
        -:   24:#endif
        -:   25:
        -:   26:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   27:
        -:   28:// move
        -:   29:
        -:   30:template <class _AlgPolicy, class _InIter, class _Sent, class _OutIter>
        -:   31:inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14
        -:   32:pair<_InIter, _OutIter> __move_impl(_InIter __first, _Sent __last, _OutIter __result) {
        -:   33:  while (__first != __last) {
        -:   34:    *__result = _IterOps<_AlgPolicy>::__iter_move(__first);
        -:   35:    ++__first;
        -:   36:    ++__result;
        -:   37:  }
        -:   38:  return std::make_pair(std::move(__first), std::move(__result));
        -:   39:}
        -:   40:
        -:   41:template <class _AlgPolicy,
        -:   42:          class _InType,
        -:   43:          class _OutType,
        -:   44:          class = __enable_if_t<is_same<typename remove_const<_InType>::type, _OutType>::value
        -:   45:                             && is_trivially_move_assignable<_OutType>::value> >
        -:   46:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyENS_4fposI11__mbstate_tEES4_vEENS_4pairIPT0_PT1_EES7_S7_S9_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPKN7doctest6detail20IExceptionTranslatorES6_vEENS_4pairIPT0_PT1_EES9_S9_SB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPN7doctest13IContextScopeES4_vEENS_4pairIPT0_PT1_EES7_S7_S9_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPN7doctest9IReporterES4_vEENS_4pairIPT0_PT1_EES7_S7_S9_ called 1 returned 100% blocks executed 100%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPKN7doctest6detail8TestCaseES6_vEENS_4pairIPT0_PT1_EES9_S9_SB_ called 1 returned 100% blocks executed 100%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPKN7doctest12TestCaseDataES5_vEENS_4pairIPT0_PT1_EES8_S8_SA_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEP5GraphS3_vEENS_4pairIPT0_PT1_EES6_S6_S8_ called 4 returned 100% blocks executed 100%
        6:   47:pair<_InType*, _OutType*> __move_impl(_InType* __first, _InType* __last, _OutType* __result) {
        -:   48:  if (__libcpp_is_constant_evaluated()
        -:   49:// TODO: Remove this once GCC supports __builtin_memmove during constant evaluation
        -:   50:#ifndef _LIBCPP_COMPILER_GCC
        -:   51:   && !is_trivially_copyable<_InType>::value
        -:   52:#endif
        -:   53:     )
        -:   54:    return std::__move_impl<_AlgPolicy, _InType*, _InType*, _OutType*>(__first, __last, __result);
        6:   55:  const size_t __n = static_cast<size_t>(__last - __first);
        6:   56:  ::__builtin_memmove(__result, __first, __n * sizeof(_OutType));
        6:   57:  return std::make_pair(__first + __n, __result + __n);
    $$$$$:   57-block  0
    $$$$$:   57-block  1
    $$$$$:   57-block  2
        1:   57-block  3
        1:   57-block  4
    $$$$$:   57-block  5
        4:   57-block  6
        -:   58:}
        -:   59:
        -:   60:template <class>
        -:   61:struct __is_trivially_move_assignable_unwrapped_impl : false_type {};
        -:   62:
        -:   63:template <class _Type>
        -:   64:struct __is_trivially_move_assignable_unwrapped_impl<_Type*> : is_trivially_move_assignable<_Type> {};
        -:   65:
        -:   66:template <class _Iter>
        -:   67:struct __is_trivially_move_assignable_unwrapped
        -:   68:    : __is_trivially_move_assignable_unwrapped_impl<decltype(std::__unwrap_iter<_Iter>(std::declval<_Iter>()))> {};
        -:   69:
        -:   70:template <class _AlgPolicy,
        -:   71:          class _InIter,
        -:   72:          class _OutIter,
        -:   73:          __enable_if_t<is_same<typename remove_const<typename iterator_traits<_InIter>::value_type>::type,
        -:   74:                                typename iterator_traits<_OutIter>::value_type>::value
        -:   75:                     && __is_cpp17_contiguous_iterator<_InIter>::value
        -:   76:                     && __is_cpp17_contiguous_iterator<_OutIter>::value
        -:   77:                     && is_trivially_move_assignable<__iter_value_type<_OutIter> >::value, int> = 0>
        -:   78:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX14
        -:   79:pair<reverse_iterator<_InIter>, reverse_iterator<_OutIter> >
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPNS_4fposI11__mbstate_tEES5_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS7_IT1_EEEES9_S9_SB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPPKN7doctest6detail20IExceptionTranslatorES7_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS9_IT1_EEEESB_SB_SD_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPPN7doctest13IContextScopeES5_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS7_IT1_EEEES9_S9_SB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPPN7doctest9IReporterES5_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS7_IT1_EEEES9_S9_SB_ called 1 returned 100% blocks executed 100%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPPKN7doctest6detail8TestCaseES7_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS9_IT1_EEEESB_SB_SD_ called 1 returned 100% blocks executed 100%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPPKN7doctest12TestCaseDataES6_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS8_IT1_EEEESA_SA_SC_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__move_implB6v15006INS_17_ClassicAlgPolicyEPP5GraphS4_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS6_IT1_EEEES8_S8_SA_ called 4 returned 100% blocks executed 100%
        6:   80:__move_impl(reverse_iterator<_InIter> __first,
        -:   81:            reverse_iterator<_InIter> __last,
        -:   82:            reverse_iterator<_OutIter> __result) {
        6:   83:  auto __first_base = std::__unwrap_iter(__first.base());
        6:   84:  auto __last_base = std::__unwrap_iter(__last.base());
        6:   85:  auto __result_base = std::__unwrap_iter(__result.base());
        6:   86:  auto __result_first = __result_base - (__first_base - __last_base);
        6:   87:  std::__move_impl<_AlgPolicy>(__last_base, __first_base, __result_first);
        6:   88:  return std::make_pair(__last, reverse_iterator<_OutIter>(std::__rewrap_iter(__result.base(), __result_first)));
    $$$$$:   88-block  0
    $$$$$:   88-block  1
    $$$$$:   88-block  2
        1:   88-block  3
        1:   88-block  4
    $$$$$:   88-block  5
        4:   88-block  6
        -:   89:}
        -:   90:
        -:   91:template <class _AlgPolicy, class _InIter, class _Sent, class _OutIter>
        -:   92:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:   93:__enable_if_t<is_copy_constructible<_InIter>::value
        -:   94:           && is_copy_constructible<_Sent>::value
        -:   95:           && is_copy_constructible<_OutIter>::value, pair<_InIter, _OutIter> >
function _ZNSt3__16__moveB6v15006INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPNS_4fposI11__mbstate_tEEEES7_S7_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS9_SB_EEE4typeES9_SA_SB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__16__moveB6v15006INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPPKN7doctest6detail20IExceptionTranslatorEEES9_S9_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairISB_SD_EEE4typeESB_SC_SD_ called 0 returned 0% blocks executed 0%
function _ZNSt3__16__moveB6v15006INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPPN7doctest13IContextScopeEEES7_S7_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS9_SB_EEE4typeES9_SA_SB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__16__moveB6v15006INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPPN7doctest9IReporterEEES7_S7_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS9_SB_EEE4typeES9_SA_SB_ called 1 returned 100% blocks executed 100%
function _ZNSt3__16__moveB6v15006INS_17_ClassicAlgPolicyEPPN7doctest9IReporterES5_S5_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS7_S9_EEE4typeES7_S8_S9_ called 0 returned 0% blocks executed 0%
function _ZNSt3__16__moveB6v15006INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPPKN7doctest6detail8TestCaseEEES9_S9_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairISB_SD_EEE4typeESB_SC_SD_ called 1 returned 100% blocks executed 100%
function _ZNSt3__16__moveB6v15006INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPPKN7doctest12TestCaseDataEEES8_S8_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairISA_SC_EEE4typeESA_SB_SC_ called 0 returned 0% blocks executed 0%
function _ZNSt3__16__moveB6v15006INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPP5GraphEES6_S6_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS8_SA_EEE4typeES8_S9_SA_ called 4 returned 100% blocks executed 100%
        6:   96:__move(_InIter __first, _Sent __last, _OutIter __result) {
        6:   97:  auto __ret = std::__move_impl<_AlgPolicy>(
        6:   98:      std::__unwrap_iter(__first), std::__unwrap_iter(__last), std::__unwrap_iter(__result));
        6:   99:  return std::make_pair(std::__rewrap_iter(__first, __ret.first), std::__rewrap_iter(__result, __ret.second));
    $$$$$:   99-block  0
    $$$$$:   99-block  1
    $$$$$:   99-block  2
        1:   99-block  3
    $$$$$:   99-block  4
        1:   99-block  5
    $$$$$:   99-block  6
        4:   99-block  7
        -:  100:}
        -:  101:
        -:  102:template <class _AlgPolicy, class _InIter, class _Sent, class _OutIter>
        -:  103:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:  104:__enable_if_t<!is_copy_constructible<_InIter>::value
        -:  105:           || !is_copy_constructible<_Sent>::value
        -:  106:           || !is_copy_constructible<_OutIter>::value, pair<_InIter, _OutIter> >
        -:  107:__move(_InIter __first, _Sent __last, _OutIter __result) {
        -:  108:  return std::__move_impl<_AlgPolicy>(std::move(__first), std::move(__last), std::move(__result));
        -:  109:}
        -:  110:
        -:  111:template <class _InputIterator, class _OutputIterator>
        -:  112:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17
function _ZNSt3__14moveB6v15006INS_16reverse_iteratorIPNS_4fposI11__mbstate_tEEEES6_EET0_T_S8_S7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__14moveB6v15006INS_16reverse_iteratorIPPKN7doctest6detail20IExceptionTranslatorEEES8_EET0_T_SA_S9_ called 0 returned 0% blocks executed 0%
function _ZNSt3__14moveB6v15006INS_16reverse_iteratorIPPN7doctest13IContextScopeEEES6_EET0_T_S8_S7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__14moveB6v15006INS_16reverse_iteratorIPPN7doctest9IReporterEEES6_EET0_T_S8_S7_ called 1 returned 100% blocks executed 100%
function _ZNSt3__14moveB6v15006IPPN7doctest9IReporterES4_EET0_T_S6_S5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__14moveB6v15006INS_16reverse_iteratorIPPKN7doctest6detail8TestCaseEEES8_EET0_T_SA_S9_ called 1 returned 100% blocks executed 100%
function _ZNSt3__14moveB6v15006INS_16reverse_iteratorIPPKN7doctest12TestCaseDataEEES7_EET0_T_S9_S8_ called 0 returned 0% blocks executed 0%
function _ZNSt3__14moveB6v15006INS_16reverse_iteratorIPP5GraphEES5_EET0_T_S7_S6_ called 4 returned 100% blocks executed 100%
        6:  113:_OutputIterator move(_InputIterator __first, _InputIterator __last, _OutputIterator __result) {
        6:  114:  return std::__move<_ClassicAlgPolicy>(__first, __last, __result).second;
    $$$$$:  114-block  0
    $$$$$:  114-block  1
    $$$$$:  114-block  2
        1:  114-block  3
    $$$$$:  114-block  4
        1:  114-block  5
    $$$$$:  114-block  6
        4:  114-block  7
        -:  115:}
        -:  116:
        -:  117:_LIBCPP_END_NAMESPACE_STD
        -:  118:
        -:  119:#endif // _LIBCPP___ALGORITHM_MOVE_H
