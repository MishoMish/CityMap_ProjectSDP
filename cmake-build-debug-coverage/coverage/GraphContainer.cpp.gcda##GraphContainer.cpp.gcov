        -:    0:Source:/Users/mihaildobroslavski/CLionProjects/CityMapProject/Structure/GraphContainer.cpp
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/CityMapLibrary.dir/Structure/GraphContainer.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/CityMapLibrary.dir/Structure/GraphContainer.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by Mihail Dobroslavski on 24.12.23.
        -:    3://
        -:    4:
        -:    5:#include "GraphContainer.h"
        -:    6:
function _ZN14GraphContainerD2Ev called 22 returned 100% blocks executed 90%
function _ZN14GraphContainerD1Ev called 22 returned 100% blocks executed 100%
       44:    7:GraphContainer::~GraphContainer() {
       77:    8:    for (auto it = graphs.begin(); it != graphs.end(); it++) {
       22:    8-block  0
       77:    8-block  1
branch  0 taken 77
branch  1 taken 0
       77:    8-block  2
branch  2 taken 55
branch  3 taken 22
       55:    8-block  3
branch  4 taken 55
branch  5 taken 0
       55:    8-block  4
    $$$$$:    8-block  5
       55:    9:        delete it->second;
       55:    9-block  0
branch  0 taken 55
branch  1 taken 0
       55:    9-block  1
branch  2 taken 0
branch  3 taken 55
       55:    9-block  2
       55:   10:    }
       55:   10-block  0
       44:   11:}
       22:   11-block  0
       22:   11-block  1
        -:   12:
function _ZN14GraphContainer9parseFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE called 2 returned 100% blocks executed 81%
        2:   13:void GraphContainer::parseFile(const std::string &filePath) {
        2:   14:    std::ifstream inputFile(filePath);
        -:   15:
        2:   16:    if (!inputFile.is_open()) {
        2:   16-block  0
branch  0 taken 2
branch  1 taken 0
        2:   16-block  1
branch  2 taken 1
branch  3 taken 1
        1:   17:        throw std::runtime_error("Error opening file: " + filePath);
        1:   17-block  0
branch  0 taken 1
branch  1 taken 0
        1:   17-block  1
branch  2 taken 1
branch  3 taken 0
        1:   17-block  2
branch  4 taken 0
branch  5 taken 1
        1:   17-block  3
        1:   17-block  4
branch  6 taken 1
branch  7 taken 0
    $$$$$:   17-block  5
        1:   17-block  6
        -:   18:    }
        -:   19:
        1:   20:    std::string line;
        3:   21:    while (std::getline(inputFile, line)) {
        1:   21-block  0
        3:   21-block  1
branch  0 taken 3
branch  1 taken 0
        3:   21-block  2
branch  2 taken 3
branch  3 taken 0
        3:   21-block  3
branch  4 taken 2
branch  5 taken 1
        2:   21-block  4
        2:   22:        std::stringstream ss(line);
        2:   22-block  0
branch  0 taken 2
branch  1 taken 0
        2:   23:        std::vector<std::string> elements;
        -:   24:
        2:   25:        std::string element;
        6:   26:        while (ss >> element) {
        2:   26-block  0
        6:   26-block  1
branch  0 taken 6
branch  1 taken 0
        6:   26-block  2
branch  2 taken 6
branch  3 taken 0
        6:   26-block  3
branch  4 taken 4
branch  5 taken 2
        4:   26-block  4
        4:   27:            elements.push_back(element);
        4:   27-block  0
branch  0 taken 4
branch  1 taken 0
        -:   28:        }
        -:   29:
        2:   30:        addGraph(elements[0]);
        2:   30-block  0
branch  0 taken 2
branch  1 taken 0
        3:   31:        for (std::size_t i = 1; i < elements.size(); i += 2) {
        2:   31-block  0
        3:   31-block  1
branch  0 taken 2
branch  1 taken 1
        1:   31-block  2
        1:   32:            addRoad(elements[0], elements[i], std::stod(elements[i + 1]));
        1:   32-block  0
branch  0 taken 1
branch  1 taken 0
        1:   32-block  1
branch  2 taken 1
branch  3 taken 0
        1:   33:        }
        1:   33-block  0
        2:   34:    }
    $$$$$:   34-block  0
        -:   35:
        1:   36:    inputFile.close();
        1:   36-block  0
branch  0 taken 1
branch  1 taken 0
        3:   37:}
    $$$$$:   37-block  0
    $$$$$:   37-block  1
    $$$$$:   37-block  2
        1:   37-block  3
    $$$$$:   37-block  4
        1:   37-block  5
        1:   37-block  6
        -:   38:
function _ZN14GraphContainer11containsKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE called 155 returned 100% blocks executed 100%
      155:   39:bool GraphContainer::containsKey(const std::string &graphName) {
      155:   40:    return graphs.find(graphName) != graphs.end();
      155:   40-block  0
        -:   41:}
        -:   42:
function _ZN14GraphContainer8addGraphERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE called 145 returned 100% blocks executed 45%
      145:   43:void GraphContainer::addGraph(const std::string &graphName) {
      145:   44:    if (!containsKey(graphName)) {
      145:   44-block  0
branch  0 taken 90
branch  1 taken 55
       55:   45:        auto *temp = new Graph(graphName);
       55:   45-block  0
branch  0 taken 55
branch  1 taken 0
       55:   45-block  1
branch  2 taken 0
branch  3 taken 55
    $$$$$:   45-block  2
    $$$$$:   45-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:   45-block  4
    $$$$$:   45-block  5
    $$$$$:   45-block  6
       55:   46:        graphs[graphName] = temp;
       55:   47:    }
       55:   47-block  0
      145:   48:}
    $$$$$:   48-block  0
      145:   48-block  1
        -:   49:
function _ZN14GraphContainer7addRoadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_d called 46 returned 100% blocks executed 100%
       46:   50:void GraphContainer::addRoad(const std::string &graph1, const std::string &graph2, double distance) {
       46:   51:    addGraph(graph1);
       46:   52:    addGraph(graph2);
        -:   53:
       46:   54:    graphs[graph1]->addEdge(graphs[graph2], distance);
       46:   55:}
       46:   55-block  0
        -:   56:
function _ZN14GraphContainer5printEv called 1 returned 100% blocks executed 100%
        1:   57:void GraphContainer::print() {
        1:   58:    std::cout << "--- --- --- --- ---\n";
        2:   59:    for (const auto &it: graphs) {
        1:   59-block  0
        2:   59-block  1
branch  0 taken 1
branch  1 taken 1
        1:   59-block  2
        1:   59-block  3
        1:   59-block  4
        1:   60:        std::cout << it.first << " " << it.second << " : " << std::endl;
        1:   61:        it.second->print();
        1:   62:        std::cout << " --- \n";
        -:   63:    }
        1:   64:}
        1:   64-block  0
        -:   65:
function _ZNK14GraphContainer8getGraphERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE called 58 returned 100% blocks executed 100%
       58:   66:Graph *GraphContainer::getGraph(const std::string &name) const {
       58:   67:    auto it = graphs.find(name);
       58:   68:    return it != graphs.end() ? it->second : nullptr;
       58:   68-block  0
branch  0 taken 57
branch  1 taken 1
       57:   68-block  1
        1:   68-block  2
       58:   68-block  3
        -:   69:}
        -:   70:
function _ZNK14GraphContainer9getGraphsEv called 31 returned 100% blocks executed 100%
       31:   71:const std::unordered_map<std::string, Graph *> &GraphContainer::getGraphs() const {
       31:   72:    return graphs;
       31:   72-block  0
        -:   73:}
