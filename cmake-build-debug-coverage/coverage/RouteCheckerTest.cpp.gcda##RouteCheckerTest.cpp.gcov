        -:    0:Source:/Users/mihaildobroslavski/CLionProjects/CityMapProject/UnitTesting/RouteCheckerTest.cpp
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/RouteCheckerTest.dir/UnitTesting/RouteCheckerTest.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/RouteCheckerTest.dir/UnitTesting/RouteCheckerTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by Mihail Dobroslavski on 30.12.23.
        -:    3://
        -:    4:
        -:    5:#define DOCTEST_CONFIG_IMPLEMENT
        -:    6:
        -:    7:#include "doctest.h"
        -:    8:#include "../TaskFunctions/RouteChecker.h"
        -:    9:#include "../Structure/GraphContainer.h"
        -:   10:#include "../Structure/Graph.h"
        -:   11:
function _ZL20DOCTEST_ANON_FUNC_14v called 8 returned 100% blocks executed 51%
        9:   12:TEST_CASE("RouteChecker Test") {
        1:   12-block  0
branch  0 taken 1
branch  1 taken 0
        1:   12-block  1
branch  2 taken 1
branch  3 taken 0
        1:   12-block  2
branch  4 taken 1
branch  5 taken 0
        1:   12-block  3
    $$$$$:   12-block  4
    $$$$$:   12-block  5
    $$$$$:   12-block  6
    $$$$$:   12-block  7
        8:   13:    GraphContainer container;
        -:   14:
        8:   15:    container.addGraph("1");
        8:   15-block  0
branch  0 taken 8
branch  1 taken 0
        8:   15-block  1
branch  2 taken 8
branch  3 taken 0
    $$$$$:   15-block  2
        8:   16:    container.addGraph("2");
        8:   16-block  0
branch  0 taken 8
branch  1 taken 0
        8:   16-block  1
branch  2 taken 8
branch  3 taken 0
    $$$$$:   16-block  2
        8:   17:    container.addGraph("3");
        8:   17-block  0
branch  0 taken 8
branch  1 taken 0
        8:   17-block  1
branch  2 taken 8
branch  3 taken 0
    $$$$$:   17-block  2
        8:   18:    container.addGraph("4");
        8:   18-block  0
branch  0 taken 8
branch  1 taken 0
        8:   18-block  1
branch  2 taken 8
branch  3 taken 0
    $$$$$:   18-block  2
        -:   19:
        8:   20:    container.addRoad("1", "2", 10.0);
        8:   20-block  0
branch  0 taken 8
branch  1 taken 0
        8:   20-block  1
branch  2 taken 8
branch  3 taken 0
        8:   20-block  2
branch  4 taken 8
branch  5 taken 0
    $$$$$:   20-block  3
    $$$$$:   20-block  4
        8:   21:    container.addRoad("1", "3", 20.0);
        8:   21-block  0
branch  0 taken 8
branch  1 taken 0
        8:   21-block  1
branch  2 taken 8
branch  3 taken 0
        8:   21-block  2
branch  4 taken 8
branch  5 taken 0
    $$$$$:   21-block  3
    $$$$$:   21-block  4
        8:   22:    container.addRoad("2", "3", 5.0);
        8:   22-block  0
branch  0 taken 8
branch  1 taken 0
        8:   22-block  1
branch  2 taken 8
branch  3 taken 0
        8:   22-block  2
branch  4 taken 8
branch  5 taken 0
    $$$$$:   22-block  3
    $$$$$:   22-block  4
        8:   23:    container.addRoad("2", "4", 15.0);
        8:   23-block  0
branch  0 taken 8
branch  1 taken 0
        8:   23-block  1
branch  2 taken 8
branch  3 taken 0
        8:   23-block  2
branch  4 taken 8
branch  5 taken 0
    $$$$$:   23-block  3
    $$$$$:   23-block  4
        8:   24:    container.addRoad("3", "1", 20.0);
        8:   24-block  0
branch  0 taken 8
branch  1 taken 0
        8:   24-block  1
branch  2 taken 8
branch  3 taken 0
        8:   24-block  2
branch  4 taken 8
branch  5 taken 0
    $$$$$:   24-block  3
    $$$$$:   24-block  4
        -:   25:
        -:   26:
        -:   27:    // Add some graphs to the container for testing
        8:   28:    Graph *graphA = container.getGraph("1");
        8:   28-block  0
branch  0 taken 8
branch  1 taken 0
        8:   28-block  1
branch  2 taken 8
branch  3 taken 0
    $$$$$:   28-block  2
        8:   29:    Graph *graphB = container.getGraph("2");
        8:   29-block  0
branch  0 taken 8
branch  1 taken 0
        8:   29-block  1
branch  2 taken 8
branch  3 taken 0
    $$$$$:   29-block  2
        8:   30:    Graph *graphC = container.getGraph("3");
        8:   30-block  0
branch  0 taken 8
branch  1 taken 0
        8:   30-block  1
branch  2 taken 8
branch  3 taken 0
    $$$$$:   30-block  2
        8:   31:    Graph *graphD = container.getGraph("4");
        8:   31-block  0
branch  0 taken 8
branch  1 taken 0
        8:   31-block  1
branch  2 taken 8
branch  3 taken 0
    $$$$$:   31-block  2
        -:   32:
        9:   33:    SUBCASE("Exists Test") {
        8:   33-block  0
branch  0 taken 8
branch  1 taken 0
        8:   33-block  1
branch  2 taken 8
branch  3 taken 0
        8:   33-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   33-block  3
    $$$$$:   33-block  4
        1:   34:        CHECK(RouteChecker::exists(graphA, graphB));
        1:   34-block  0
        1:   34-block  1
branch  0 taken 1
branch  1 taken 0
        1:   34-block  2
branch  2 taken 1
branch  3 taken 0
        1:   34-block  3
branch  4 taken 1
branch  5 taken 0
        1:   34-block  4
branch  6 taken 1
branch  7 taken 0
        1:   34-block  5
branch  8 taken 1
branch  9 taken 0
        1:   34-block  6
branch 10 taken 1
branch 11 taken 0
        1:   34-block  7
    $$$$$:   34-block  8
    $$$$$:   34-block  9
    $$$$$:   34-block 10
    $$$$$:   34-block 11
branch 12 never executed
branch 13 never executed
    $$$$$:   34-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   34-block 13
        1:   34-block 14
branch 16 taken 1
branch 17 taken 0
        1:   34-block 15
branch 18 taken 0
branch 19 taken 1
    $$$$$:   34-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   34-block 17
    $$$$$:   34-block 18
branch 22 never executed
branch 23 never executed
    $$$$$:   34-block 19
        1:   34-block 20
branch 24 taken 1
branch 25 taken 0
        1:   34-block 21
        1:   34-block 22
    $$$$$:   34-block 23
    $$$$$:   34-block 24
        1:   35:        CHECK(RouteChecker::exists(graphA, graphC));
        1:   35-block  0
        1:   35-block  1
branch  0 taken 1
branch  1 taken 0
        1:   35-block  2
branch  2 taken 1
branch  3 taken 0
        1:   35-block  3
branch  4 taken 1
branch  5 taken 0
        1:   35-block  4
branch  6 taken 1
branch  7 taken 0
        1:   35-block  5
branch  8 taken 1
branch  9 taken 0
        1:   35-block  6
branch 10 taken 1
branch 11 taken 0
        1:   35-block  7
    $$$$$:   35-block  8
    $$$$$:   35-block  9
    $$$$$:   35-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   35-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   35-block 12
        1:   35-block 13
branch 16 taken 1
branch 17 taken 0
        1:   35-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   35-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   35-block 16
    $$$$$:   35-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   35-block 18
        1:   35-block 19
branch 24 taken 1
branch 25 taken 0
        1:   35-block 20
        1:   35-block 21
    $$$$$:   35-block 22
        1:   36:        CHECK(RouteChecker::exists(graphA, graphD));
        1:   36-block  0
        1:   36-block  1
branch  0 taken 1
branch  1 taken 0
        1:   36-block  2
branch  2 taken 1
branch  3 taken 0
        1:   36-block  3
branch  4 taken 1
branch  5 taken 0
        1:   36-block  4
branch  6 taken 1
branch  7 taken 0
        1:   36-block  5
branch  8 taken 1
branch  9 taken 0
        1:   36-block  6
branch 10 taken 1
branch 11 taken 0
        1:   36-block  7
    $$$$$:   36-block  8
    $$$$$:   36-block  9
    $$$$$:   36-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   36-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   36-block 12
        1:   36-block 13
branch 16 taken 1
branch 17 taken 0
        1:   36-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   36-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   36-block 16
    $$$$$:   36-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   36-block 18
        1:   36-block 19
branch 24 taken 1
branch 25 taken 0
        1:   36-block 20
        1:   36-block 21
    $$$$$:   36-block 22
        1:   37:        CHECK_FALSE(RouteChecker::exists(graphD, graphB));
        1:   37-block  0
        1:   37-block  1
branch  0 taken 1
branch  1 taken 0
        1:   37-block  2
branch  2 taken 1
branch  3 taken 0
        1:   37-block  3
branch  4 taken 1
branch  5 taken 0
        1:   37-block  4
branch  6 taken 1
branch  7 taken 0
        1:   37-block  5
branch  8 taken 1
branch  9 taken 0
        1:   37-block  6
branch 10 taken 1
branch 11 taken 0
        1:   37-block  7
    $$$$$:   37-block  8
    $$$$$:   37-block  9
    $$$$$:   37-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   37-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   37-block 12
        1:   37-block 13
branch 16 taken 1
branch 17 taken 0
        1:   37-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   37-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   37-block 16
    $$$$$:   37-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   37-block 18
        1:   37-block 19
branch 24 taken 1
branch 25 taken 0
        1:   37-block 20
        1:   37-block 21
    $$$$$:   37-block 22
        1:   38:    }
        1:   38-block  0
        -:   39:
        9:   40:    SUBCASE("Get Paths Test - closed junctions") {
        8:   40-block  0
branch  0 taken 8
branch  1 taken 0
        8:   40-block  1
branch  2 taken 8
branch  3 taken 0
        8:   40-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   40-block  3
    $$$$$:   40-block  4
        -:   41:        // Define a set of closed junctions
        1:   42:        std::unordered_set<Graph *> closedJunctions = {graphB};
        1:   42-block  0
branch  0 taken 1
branch  1 taken 0
        1:   43:        std::vector<Path> paths = RouteChecker::getPaths(graphA, graphC, closedJunctions);
        1:   43-block  0
branch  0 taken 1
branch  1 taken 0
        1:   44:        REQUIRE(paths.size() == 1);
        1:   44-block  0
        1:   44-block  1
branch  0 taken 1
branch  1 taken 0
        1:   44-block  2
branch  2 taken 1
branch  3 taken 0
        1:   44-block  3
branch  4 taken 1
branch  5 taken 0
        1:   44-block  4
branch  6 taken 1
branch  7 taken 0
        1:   44-block  5
branch  8 taken 1
branch  9 taken 0
        1:   44-block  6
    $$$$$:   44-block  7
    $$$$$:   44-block  8
    $$$$$:   44-block  9
    $$$$$:   44-block 10
branch 10 never executed
branch 11 never executed
    $$$$$:   44-block 11
branch 12 never executed
branch 13 never executed
    $$$$$:   44-block 12
        1:   44-block 13
branch 14 taken 1
branch 15 taken 0
        1:   44-block 14
branch 16 taken 0
branch 17 taken 1
    $$$$$:   44-block 15
branch 18 never executed
branch 19 never executed
    $$$$$:   44-block 16
    $$$$$:   44-block 17
branch 20 never executed
branch 21 never executed
    $$$$$:   44-block 18
        1:   44-block 19
branch 22 taken 1
branch 23 taken 0
        1:   44-block 20
        1:   44-block 21
    $$$$$:   44-block 22
        1:   45:        CHECK(paths[0].cost == 20.0);
        1:   45-block  0
        1:   45-block  1
branch  0 taken 1
branch  1 taken 0
        1:   45-block  2
branch  2 taken 1
branch  3 taken 0
        1:   45-block  3
branch  4 taken 1
branch  5 taken 0
        1:   45-block  4
branch  6 taken 1
branch  7 taken 0
        1:   45-block  5
branch  8 taken 1
branch  9 taken 0
        1:   45-block  6
    $$$$$:   45-block  7
    $$$$$:   45-block  8
    $$$$$:   45-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   45-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   45-block 11
        1:   45-block 12
branch 14 taken 1
branch 15 taken 0
        1:   45-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   45-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   45-block 15
    $$$$$:   45-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   45-block 17
        1:   45-block 18
branch 22 taken 1
branch 23 taken 0
        1:   45-block 19
        1:   45-block 20
    $$$$$:   45-block 21
        1:   46:        CHECK(paths[0].nodes.size() == 2);
        1:   46-block  0
        1:   46-block  1
branch  0 taken 1
branch  1 taken 0
        1:   46-block  2
branch  2 taken 1
branch  3 taken 0
        1:   46-block  3
branch  4 taken 1
branch  5 taken 0
        1:   46-block  4
branch  6 taken 1
branch  7 taken 0
        1:   46-block  5
branch  8 taken 1
branch  9 taken 0
        1:   46-block  6
    $$$$$:   46-block  7
    $$$$$:   46-block  8
    $$$$$:   46-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   46-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   46-block 11
        1:   46-block 12
branch 14 taken 1
branch 15 taken 0
        1:   46-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   46-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   46-block 15
    $$$$$:   46-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   46-block 17
        1:   46-block 18
branch 22 taken 1
branch 23 taken 0
        1:   46-block 19
        1:   46-block 20
    $$$$$:   46-block 21
        1:   47:        CHECK(paths[0].nodes[0]->getName() == "1");
        1:   47-block  0
        1:   47-block  1
branch  0 taken 1
branch  1 taken 0
        1:   47-block  2
branch  2 taken 1
branch  3 taken 0
        1:   47-block  3
branch  4 taken 1
branch  5 taken 0
        1:   47-block  4
branch  6 taken 1
branch  7 taken 0
        1:   47-block  5
branch  8 taken 1
branch  9 taken 0
        1:   47-block  6
branch 10 taken 1
branch 11 taken 0
        1:   47-block  7
    $$$$$:   47-block  8
    $$$$$:   47-block  9
    $$$$$:   47-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   47-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   47-block 12
        1:   47-block 13
branch 16 taken 1
branch 17 taken 0
        1:   47-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   47-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   47-block 16
    $$$$$:   47-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   47-block 18
        1:   47-block 19
branch 24 taken 1
branch 25 taken 0
        1:   47-block 20
        1:   47-block 21
    $$$$$:   47-block 22
        1:   48:        CHECK(paths[0].nodes[1]->getName() == "3");
        1:   48-block  0
        1:   48-block  1
branch  0 taken 1
branch  1 taken 0
        1:   48-block  2
branch  2 taken 1
branch  3 taken 0
        1:   48-block  3
branch  4 taken 1
branch  5 taken 0
        1:   48-block  4
branch  6 taken 1
branch  7 taken 0
        1:   48-block  5
branch  8 taken 1
branch  9 taken 0
        1:   48-block  6
branch 10 taken 1
branch 11 taken 0
        1:   48-block  7
    $$$$$:   48-block  8
    $$$$$:   48-block  9
    $$$$$:   48-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   48-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   48-block 12
        1:   48-block 13
branch 16 taken 1
branch 17 taken 0
        1:   48-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   48-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   48-block 16
    $$$$$:   48-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   48-block 18
        1:   48-block 19
branch 24 taken 1
branch 25 taken 0
        1:   48-block 20
        1:   48-block 21
    $$$$$:   48-block 22
        1:   49:    }
        1:   49-block  0
    $$$$$:   49-block  1
    $$$$$:   49-block  2
        -:   50:
        9:   51:    SUBCASE("Get Paths Test - NO closed junctions") {
        8:   51-block  0
branch  0 taken 8
branch  1 taken 0
        8:   51-block  1
branch  2 taken 8
branch  3 taken 0
        8:   51-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   51-block  3
    $$$$$:   51-block  4
        1:   52:        std::vector<Path> paths = RouteChecker::getPaths(graphA, graphC);
        1:   52-block  0
branch  0 taken 1
branch  1 taken 0
        1:   53:        REQUIRE(paths.size() == 2);
        1:   53-block  0
        1:   53-block  1
branch  0 taken 1
branch  1 taken 0
        1:   53-block  2
branch  2 taken 1
branch  3 taken 0
        1:   53-block  3
branch  4 taken 1
branch  5 taken 0
        1:   53-block  4
branch  6 taken 1
branch  7 taken 0
        1:   53-block  5
branch  8 taken 1
branch  9 taken 0
        1:   53-block  6
    $$$$$:   53-block  7
    $$$$$:   53-block  8
    $$$$$:   53-block  9
    $$$$$:   53-block 10
branch 10 never executed
branch 11 never executed
    $$$$$:   53-block 11
branch 12 never executed
branch 13 never executed
    $$$$$:   53-block 12
        1:   53-block 13
branch 14 taken 1
branch 15 taken 0
        1:   53-block 14
branch 16 taken 0
branch 17 taken 1
    $$$$$:   53-block 15
branch 18 never executed
branch 19 never executed
    $$$$$:   53-block 16
    $$$$$:   53-block 17
branch 20 never executed
branch 21 never executed
    $$$$$:   53-block 18
        1:   53-block 19
branch 22 taken 1
branch 23 taken 0
        1:   53-block 20
        1:   53-block 21
    $$$$$:   53-block 22
        1:   54:        CHECK(paths[0].cost == 15.0);
        1:   54-block  0
        1:   54-block  1
branch  0 taken 1
branch  1 taken 0
        1:   54-block  2
branch  2 taken 1
branch  3 taken 0
        1:   54-block  3
branch  4 taken 1
branch  5 taken 0
        1:   54-block  4
branch  6 taken 1
branch  7 taken 0
        1:   54-block  5
branch  8 taken 1
branch  9 taken 0
        1:   54-block  6
    $$$$$:   54-block  7
    $$$$$:   54-block  8
    $$$$$:   54-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   54-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   54-block 11
        1:   54-block 12
branch 14 taken 1
branch 15 taken 0
        1:   54-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   54-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   54-block 15
    $$$$$:   54-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   54-block 17
        1:   54-block 18
branch 22 taken 1
branch 23 taken 0
        1:   54-block 19
        1:   54-block 20
    $$$$$:   54-block 21
        1:   55:        CHECK(paths[0].nodes.size() == 3);
        1:   55-block  0
        1:   55-block  1
branch  0 taken 1
branch  1 taken 0
        1:   55-block  2
branch  2 taken 1
branch  3 taken 0
        1:   55-block  3
branch  4 taken 1
branch  5 taken 0
        1:   55-block  4
branch  6 taken 1
branch  7 taken 0
        1:   55-block  5
branch  8 taken 1
branch  9 taken 0
        1:   55-block  6
    $$$$$:   55-block  7
    $$$$$:   55-block  8
    $$$$$:   55-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   55-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   55-block 11
        1:   55-block 12
branch 14 taken 1
branch 15 taken 0
        1:   55-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   55-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   55-block 15
    $$$$$:   55-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   55-block 17
        1:   55-block 18
branch 22 taken 1
branch 23 taken 0
        1:   55-block 19
        1:   55-block 20
    $$$$$:   55-block 21
        1:   56:        CHECK(paths[1].cost == 20.0);
        1:   56-block  0
        1:   56-block  1
branch  0 taken 1
branch  1 taken 0
        1:   56-block  2
branch  2 taken 1
branch  3 taken 0
        1:   56-block  3
branch  4 taken 1
branch  5 taken 0
        1:   56-block  4
branch  6 taken 1
branch  7 taken 0
        1:   56-block  5
branch  8 taken 1
branch  9 taken 0
        1:   56-block  6
    $$$$$:   56-block  7
    $$$$$:   56-block  8
    $$$$$:   56-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   56-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   56-block 11
        1:   56-block 12
branch 14 taken 1
branch 15 taken 0
        1:   56-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   56-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   56-block 15
    $$$$$:   56-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   56-block 17
        1:   56-block 18
branch 22 taken 1
branch 23 taken 0
        1:   56-block 19
        1:   56-block 20
    $$$$$:   56-block 21
        1:   57:        CHECK(paths[1].nodes.size() == 2);
        1:   57-block  0
        1:   57-block  1
branch  0 taken 1
branch  1 taken 0
        1:   57-block  2
branch  2 taken 1
branch  3 taken 0
        1:   57-block  3
branch  4 taken 1
branch  5 taken 0
        1:   57-block  4
branch  6 taken 1
branch  7 taken 0
        1:   57-block  5
branch  8 taken 1
branch  9 taken 0
        1:   57-block  6
    $$$$$:   57-block  7
    $$$$$:   57-block  8
    $$$$$:   57-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   57-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   57-block 11
        1:   57-block 12
branch 14 taken 1
branch 15 taken 0
        1:   57-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   57-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   57-block 15
    $$$$$:   57-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   57-block 17
        1:   57-block 18
branch 22 taken 1
branch 23 taken 0
        1:   57-block 19
        1:   57-block 20
    $$$$$:   57-block 21
        1:   58:    }
        1:   58-block  0
    $$$$$:   58-block  1
        -:   59:
        9:   60:    SUBCASE("Can Return to Start Test") {
        8:   60-block  0
branch  0 taken 8
branch  1 taken 0
        8:   60-block  1
branch  2 taken 8
branch  3 taken 0
        8:   60-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   60-block  3
    $$$$$:   60-block  4
        1:   61:        CHECK(RouteChecker::canReturnToStart(graphA));
        1:   61-block  0
        1:   61-block  1
branch  0 taken 1
branch  1 taken 0
        1:   61-block  2
branch  2 taken 1
branch  3 taken 0
        1:   61-block  3
branch  4 taken 1
branch  5 taken 0
        1:   61-block  4
branch  6 taken 1
branch  7 taken 0
        1:   61-block  5
branch  8 taken 1
branch  9 taken 0
        1:   61-block  6
branch 10 taken 1
branch 11 taken 0
        1:   61-block  7
    $$$$$:   61-block  8
    $$$$$:   61-block  9
    $$$$$:   61-block 10
    $$$$$:   61-block 11
branch 12 never executed
branch 13 never executed
    $$$$$:   61-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   61-block 13
        1:   61-block 14
branch 16 taken 1
branch 17 taken 0
        1:   61-block 15
branch 18 taken 0
branch 19 taken 1
    $$$$$:   61-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   61-block 17
    $$$$$:   61-block 18
branch 22 never executed
branch 23 never executed
    $$$$$:   61-block 19
        1:   61-block 20
branch 24 taken 1
branch 25 taken 0
        1:   61-block 21
        1:   61-block 22
    $$$$$:   61-block 23
        1:   62:        CHECK_FALSE(RouteChecker::canReturnToStart(graphD));
        1:   62-block  0
        1:   62-block  1
branch  0 taken 1
branch  1 taken 0
        1:   62-block  2
branch  2 taken 1
branch  3 taken 0
        1:   62-block  3
branch  4 taken 1
branch  5 taken 0
        1:   62-block  4
branch  6 taken 1
branch  7 taken 0
        1:   62-block  5
branch  8 taken 1
branch  9 taken 0
        1:   62-block  6
branch 10 taken 1
branch 11 taken 0
        1:   62-block  7
    $$$$$:   62-block  8
    $$$$$:   62-block  9
    $$$$$:   62-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   62-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   62-block 12
        1:   62-block 13
branch 16 taken 1
branch 17 taken 0
        1:   62-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   62-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   62-block 16
    $$$$$:   62-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   62-block 18
        1:   62-block 19
branch 24 taken 1
branch 25 taken 0
        1:   62-block 20
        1:   62-block 21
    $$$$$:   62-block 22
        1:   63:    }
        1:   63-block  0
        -:   64:
        9:   65:    SUBCASE("Hamiltonian Path Test - NO starting junction") {
        8:   65-block  0
branch  0 taken 8
branch  1 taken 0
        8:   65-block  1
branch  2 taken 8
branch  3 taken 0
        8:   65-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   65-block  3
    $$$$$:   65-block  4
        1:   66:        Path *path = RouteChecker::hasHamiltonianPath(&container);
        1:   66-block  0
branch  0 taken 1
branch  1 taken 0
        1:   67:        REQUIRE(path != nullptr);
        1:   67-block  0
        1:   67-block  1
branch  0 taken 1
branch  1 taken 0
        1:   67-block  2
branch  2 taken 1
branch  3 taken 0
        1:   67-block  3
branch  4 taken 1
branch  5 taken 0
        1:   67-block  4
branch  6 taken 1
branch  7 taken 0
        1:   67-block  5
branch  8 taken 1
branch  9 taken 0
        1:   67-block  6
    $$$$$:   67-block  7
    $$$$$:   67-block  8
    $$$$$:   67-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   67-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   67-block 11
        1:   67-block 12
branch 14 taken 1
branch 15 taken 0
        1:   67-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   67-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   67-block 15
    $$$$$:   67-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   67-block 17
        1:   67-block 18
branch 22 taken 1
branch 23 taken 0
        1:   67-block 19
        1:   67-block 20
    $$$$$:   67-block 21
        1:   68:    }
        1:   68-block  0
        -:   69:
        9:   70:    SUBCASE("Hamiltonian Path Test - starting junction") {
        8:   70-block  0
branch  0 taken 8
branch  1 taken 0
        8:   70-block  1
branch  2 taken 8
branch  3 taken 0
        8:   70-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   70-block  3
    $$$$$:   70-block  4
        1:   71:        Path *path = RouteChecker::hasHamiltonianPath(&container, graphA);
        1:   71-block  0
branch  0 taken 1
branch  1 taken 0
        1:   72:        REQUIRE(path != nullptr);
        1:   72-block  0
        1:   72-block  1
branch  0 taken 1
branch  1 taken 0
        1:   72-block  2
branch  2 taken 1
branch  3 taken 0
        1:   72-block  3
branch  4 taken 1
branch  5 taken 0
        1:   72-block  4
branch  6 taken 1
branch  7 taken 0
        1:   72-block  5
branch  8 taken 1
branch  9 taken 0
        1:   72-block  6
    $$$$$:   72-block  7
    $$$$$:   72-block  8
    $$$$$:   72-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   72-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   72-block 11
        1:   72-block 12
branch 14 taken 1
branch 15 taken 0
        1:   72-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   72-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   72-block 15
    $$$$$:   72-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   72-block 17
        1:   72-block 18
branch 22 taken 1
branch 23 taken 0
        1:   72-block 19
        1:   72-block 20
    $$$$$:   72-block 21
        1:   73:    }
        1:   73-block  0
        -:   74:
        9:   75:    SUBCASE("Can reach all other Test") {
        8:   75-block  0
branch  0 taken 8
branch  1 taken 0
        8:   75-block  1
branch  2 taken 8
branch  3 taken 0
        8:   75-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   75-block  3
    $$$$$:   75-block  4
        1:   76:        CHECK(RouteChecker::canReachAllNodes(&container, graphA));
        1:   76-block  0
        1:   76-block  1
branch  0 taken 1
branch  1 taken 0
        1:   76-block  2
branch  2 taken 1
branch  3 taken 0
        1:   76-block  3
branch  4 taken 1
branch  5 taken 0
        1:   76-block  4
branch  6 taken 1
branch  7 taken 0
        1:   76-block  5
branch  8 taken 1
branch  9 taken 0
        1:   76-block  6
branch 10 taken 1
branch 11 taken 0
        1:   76-block  7
    $$$$$:   76-block  8
    $$$$$:   76-block  9
    $$$$$:   76-block 10
    $$$$$:   76-block 11
branch 12 never executed
branch 13 never executed
    $$$$$:   76-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   76-block 13
        1:   76-block 14
branch 16 taken 1
branch 17 taken 0
        1:   76-block 15
branch 18 taken 0
branch 19 taken 1
    $$$$$:   76-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   76-block 17
    $$$$$:   76-block 18
branch 22 never executed
branch 23 never executed
    $$$$$:   76-block 19
        1:   76-block 20
branch 24 taken 1
branch 25 taken 0
        1:   76-block 21
        1:   76-block 22
    $$$$$:   76-block 23
        1:   77:        CHECK(RouteChecker::canReachAllNodes(&container, graphB));
        1:   77-block  0
        1:   77-block  1
branch  0 taken 1
branch  1 taken 0
        1:   77-block  2
branch  2 taken 1
branch  3 taken 0
        1:   77-block  3
branch  4 taken 1
branch  5 taken 0
        1:   77-block  4
branch  6 taken 1
branch  7 taken 0
        1:   77-block  5
branch  8 taken 1
branch  9 taken 0
        1:   77-block  6
branch 10 taken 1
branch 11 taken 0
        1:   77-block  7
    $$$$$:   77-block  8
    $$$$$:   77-block  9
    $$$$$:   77-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   77-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   77-block 12
        1:   77-block 13
branch 16 taken 1
branch 17 taken 0
        1:   77-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   77-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   77-block 16
    $$$$$:   77-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   77-block 18
        1:   77-block 19
branch 24 taken 1
branch 25 taken 0
        1:   77-block 20
        1:   77-block 21
    $$$$$:   77-block 22
        1:   78:        CHECK(RouteChecker::canReachAllNodes(&container, graphC));
        1:   78-block  0
        1:   78-block  1
branch  0 taken 1
branch  1 taken 0
        1:   78-block  2
branch  2 taken 1
branch  3 taken 0
        1:   78-block  3
branch  4 taken 1
branch  5 taken 0
        1:   78-block  4
branch  6 taken 1
branch  7 taken 0
        1:   78-block  5
branch  8 taken 1
branch  9 taken 0
        1:   78-block  6
branch 10 taken 1
branch 11 taken 0
        1:   78-block  7
    $$$$$:   78-block  8
    $$$$$:   78-block  9
    $$$$$:   78-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   78-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   78-block 12
        1:   78-block 13
branch 16 taken 1
branch 17 taken 0
        1:   78-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   78-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   78-block 16
    $$$$$:   78-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   78-block 18
        1:   78-block 19
branch 24 taken 1
branch 25 taken 0
        1:   78-block 20
        1:   78-block 21
    $$$$$:   78-block 22
        1:   79:        CHECK_FALSE(RouteChecker::canReachAllNodes(&container, graphD));
        1:   79-block  0
        1:   79-block  1
branch  0 taken 1
branch  1 taken 0
        1:   79-block  2
branch  2 taken 1
branch  3 taken 0
        1:   79-block  3
branch  4 taken 1
branch  5 taken 0
        1:   79-block  4
branch  6 taken 1
branch  7 taken 0
        1:   79-block  5
branch  8 taken 1
branch  9 taken 0
        1:   79-block  6
branch 10 taken 1
branch 11 taken 0
        1:   79-block  7
    $$$$$:   79-block  8
    $$$$$:   79-block  9
    $$$$$:   79-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   79-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   79-block 12
        1:   79-block 13
branch 16 taken 1
branch 17 taken 0
        1:   79-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   79-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   79-block 16
    $$$$$:   79-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   79-block 18
        1:   79-block 19
branch 24 taken 1
branch 25 taken 0
        1:   79-block 20
        1:   79-block 21
    $$$$$:   79-block 22
        1:   80:    }
        1:   80-block  0
        -:   81:
        9:   82:    SUBCASE("Find dead ends test") {
        8:   82-block  0
branch  0 taken 8
branch  1 taken 0
        8:   82-block  1
branch  2 taken 8
branch  3 taken 0
        8:   82-block  2
branch  4 taken 7
branch  5 taken 1
    $$$$$:   82-block  3
    $$$$$:   82-block  4
        1:   83:        std::vector<std::pair<Graph *, Graph *>> deadEnds = RouteChecker::findAllDeadEnded(&container);
        1:   83-block  0
branch  0 taken 1
branch  1 taken 0
        1:   84:        REQUIRE(deadEnds.size() == 1);
        1:   84-block  0
        1:   84-block  1
branch  0 taken 1
branch  1 taken 0
        1:   84-block  2
branch  2 taken 1
branch  3 taken 0
        1:   84-block  3
branch  4 taken 1
branch  5 taken 0
        1:   84-block  4
branch  6 taken 1
branch  7 taken 0
        1:   84-block  5
branch  8 taken 1
branch  9 taken 0
        1:   84-block  6
    $$$$$:   84-block  7
    $$$$$:   84-block  8
    $$$$$:   84-block  9
    $$$$$:   84-block 10
branch 10 never executed
branch 11 never executed
    $$$$$:   84-block 11
branch 12 never executed
branch 13 never executed
    $$$$$:   84-block 12
        1:   84-block 13
branch 14 taken 1
branch 15 taken 0
        1:   84-block 14
branch 16 taken 0
branch 17 taken 1
    $$$$$:   84-block 15
branch 18 never executed
branch 19 never executed
    $$$$$:   84-block 16
    $$$$$:   84-block 17
branch 20 never executed
branch 21 never executed
    $$$$$:   84-block 18
        1:   84-block 19
branch 22 taken 1
branch 23 taken 0
        1:   84-block 20
        1:   84-block 21
    $$$$$:   84-block 22
        1:   85:        CHECK(deadEnds[0].first->getName() == "2");
        1:   85-block  0
        1:   85-block  1
branch  0 taken 1
branch  1 taken 0
        1:   85-block  2
branch  2 taken 1
branch  3 taken 0
        1:   85-block  3
branch  4 taken 1
branch  5 taken 0
        1:   85-block  4
branch  6 taken 1
branch  7 taken 0
        1:   85-block  5
branch  8 taken 1
branch  9 taken 0
        1:   85-block  6
branch 10 taken 1
branch 11 taken 0
        1:   85-block  7
    $$$$$:   85-block  8
    $$$$$:   85-block  9
    $$$$$:   85-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   85-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   85-block 12
        1:   85-block 13
branch 16 taken 1
branch 17 taken 0
        1:   85-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   85-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   85-block 16
    $$$$$:   85-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   85-block 18
        1:   85-block 19
branch 24 taken 1
branch 25 taken 0
        1:   85-block 20
        1:   85-block 21
    $$$$$:   85-block 22
        1:   86:        CHECK(deadEnds[0].second->getName() == "4");
        1:   86-block  0
        1:   86-block  1
branch  0 taken 1
branch  1 taken 0
        1:   86-block  2
branch  2 taken 1
branch  3 taken 0
        1:   86-block  3
branch  4 taken 1
branch  5 taken 0
        1:   86-block  4
branch  6 taken 1
branch  7 taken 0
        1:   86-block  5
branch  8 taken 1
branch  9 taken 0
        1:   86-block  6
branch 10 taken 1
branch 11 taken 0
        1:   86-block  7
    $$$$$:   86-block  8
    $$$$$:   86-block  9
    $$$$$:   86-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   86-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   86-block 12
        1:   86-block 13
branch 16 taken 1
branch 17 taken 0
        1:   86-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   86-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   86-block 16
    $$$$$:   86-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   86-block 18
        1:   86-block 19
branch 24 taken 1
branch 25 taken 0
        1:   86-block 20
        1:   86-block 21
    $$$$$:   86-block 22
        1:   87:    }
        1:   87-block  0
    $$$$$:   87-block  1
        8:   88:}
    $$$$$:   88-block  0
    $$$$$:   88-block  1
    $$$$$:   88-block  2
    $$$$$:   88-block  3
    $$$$$:   88-block  4
    $$$$$:   88-block  5
    $$$$$:   88-block  6
    $$$$$:   88-block  7
    $$$$$:   88-block  8
    $$$$$:   88-block  9
    $$$$$:   88-block 10
    $$$$$:   88-block 11
    $$$$$:   88-block 12
    $$$$$:   88-block 13
    $$$$$:   88-block 14
    $$$$$:   88-block 15
    $$$$$:   88-block 16
    $$$$$:   88-block 17
    $$$$$:   88-block 18
    $$$$$:   88-block 19
    $$$$$:   88-block 20
    $$$$$:   88-block 21
    $$$$$:   88-block 22
    $$$$$:   88-block 23
    $$$$$:   88-block 24
    $$$$$:   88-block 25
    $$$$$:   88-block 26
    $$$$$:   88-block 27
    $$$$$:   88-block 28
    $$$$$:   88-block 29
    $$$$$:   88-block 30
    $$$$$:   88-block 31
    $$$$$:   88-block 32
    $$$$$:   88-block 33
    $$$$$:   88-block 34
    $$$$$:   88-block 35
    $$$$$:   88-block 36
    $$$$$:   88-block 37
    $$$$$:   88-block 38
    $$$$$:   88-block 39
    $$$$$:   88-block 40
    $$$$$:   88-block 41
    $$$$$:   88-block 42
    $$$$$:   88-block 43
    $$$$$:   88-block 44
    $$$$$:   88-block 45
    $$$$$:   88-block 46
    $$$$$:   88-block 47
    $$$$$:   88-block 48
    $$$$$:   88-block 49
    $$$$$:   88-block 50
    $$$$$:   88-block 51
    $$$$$:   88-block 52
    $$$$$:   88-block 53
    $$$$$:   88-block 54
    $$$$$:   88-block 55
    $$$$$:   88-block 56
    $$$$$:   88-block 57
    $$$$$:   88-block 58
    $$$$$:   88-block 59
    $$$$$:   88-block 60
    $$$$$:   88-block 61
        8:   88-block 62
    $$$$$:   88-block 63
    $$$$$:   88-block 64
        -:   89:
function main called 1 returned 100% blocks executed 50%
        1:   90:int main(int argc, char *argv[]) {
        1:   91:    doctest::Context context(argc, argv);
        1:   92:    return context.run();
        1:   92-block  0
branch  0 taken 1
branch  1 taken 0
        1:   93:}
        1:   93-block  0
    $$$$$:   93-block  1
    $$$$$:   93-block  2
        -:   94:
