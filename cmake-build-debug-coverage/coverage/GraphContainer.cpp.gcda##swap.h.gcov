        -:    0:Source:/Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__utility/swap.h
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/CityMapLibrary.dir/Structure/GraphContainer.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/CityMapLibrary.dir/Structure/GraphContainer.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://===----------------------------------------------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#ifndef _LIBCPP___UTILITY_SWAP_H
        -:   10:#define _LIBCPP___UTILITY_SWAP_H
        -:   11:
        -:   12:#include <__config>
        -:   13:#include <__utility/declval.h>
        -:   14:#include <__utility/move.h>
        -:   15:#include <cstddef>
        -:   16:#include <type_traits>
        -:   17:
        -:   18:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   19:#  pragma GCC system_header
        -:   20:#endif
        -:   21:
        -:   22:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   23:
        -:   24:#ifndef _LIBCPP_CXX03_LANG
        -:   25:template <class _Tp>
        -:   26:using __swap_result_t = typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type;
        -:   27:#else
        -:   28:template <class>
        -:   29:using __swap_result_t = void;
        -:   30:#endif
        -:   31:
        -:   32:template <class _Tp>
function _ZNSt3__14swapB6v15006IPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS9_EE5valueEvE4typeERS9_SC_ called 0 returned 0% blocks executed 0%
function _ZNSt3__14swapB6v15006ImEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS2_EE5valueEvE4typeERS2_S5_ called 0 returned 0% blocks executed 0%
    #####:   33:inline _LIBCPP_INLINE_VISIBILITY __swap_result_t<_Tp> _LIBCPP_CONSTEXPR_AFTER_CXX17 swap(_Tp& __x, _Tp& __y)
        -:   34:    _NOEXCEPT_(is_nothrow_move_constructible<_Tp>::value&& is_nothrow_move_assignable<_Tp>::value) {
    #####:   35:  _Tp __t(_VSTD::move(__x));
    #####:   36:  __x = _VSTD::move(__y);
    #####:   37:  __y = _VSTD::move(__t);
    #####:   38:}
    $$$$$:   38-block  0
    $$$$$:   38-block  1
        -:   39:
        -:   40:template <class _Tp, size_t _Np>
        -:   41:inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 typename enable_if<__is_swappable<_Tp>::value>::type
        -:   42:swap(_Tp (&__a)[_Np], _Tp (&__b)[_Np]) _NOEXCEPT_(__is_nothrow_swappable<_Tp>::value) {
        -:   43:  for (size_t __i = 0; __i != _Np; ++__i) {
        -:   44:    swap(__a[__i], __b[__i]);
        -:   45:  }
        -:   46:}
        -:   47:
        -:   48:_LIBCPP_END_NAMESPACE_STD
        -:   49:
        -:   50:#endif // _LIBCPP___UTILITY_SWAP_H
