        -:    0:Source:/Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__iterator/wrap_iter.h
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/TerminalProgramTest.dir/UnitTesting/TerminalProgramTest.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/TerminalProgramTest.dir/UnitTesting/TerminalProgramTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// -*- C++ -*-
        -:    2://===----------------------------------------------------------------------===//
        -:    3://
        -:    4:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    5:// See https://llvm.org/LICENSE.txt for license information.
        -:    6:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    7://
        -:    8://===----------------------------------------------------------------------===//
        -:    9:
        -:   10:#ifndef _LIBCPP___ITERATOR_WRAP_ITER_H
        -:   11:#define _LIBCPP___ITERATOR_WRAP_ITER_H
        -:   12:
        -:   13:#include <__config>
        -:   14:#include <__debug>
        -:   15:#include <__iterator/iterator_traits.h>
        -:   16:#include <__memory/addressof.h>
        -:   17:#include <__memory/pointer_traits.h>
        -:   18:#include <type_traits>
        -:   19:
        -:   20:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   21:#  pragma GCC system_header
        -:   22:#endif
        -:   23:
        -:   24:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   25:
        -:   26:template <class _Iter>
        -:   27:class __wrap_iter
        -:   28:{
        -:   29:public:
        -:   30:    typedef _Iter                                                      iterator_type;
        -:   31:    typedef typename iterator_traits<iterator_type>::value_type        value_type;
        -:   32:    typedef typename iterator_traits<iterator_type>::difference_type   difference_type;
        -:   33:    typedef typename iterator_traits<iterator_type>::pointer           pointer;
        -:   34:    typedef typename iterator_traits<iterator_type>::reference         reference;
        -:   35:    typedef typename iterator_traits<iterator_type>::iterator_category iterator_category;
        -:   36:#if _LIBCPP_STD_VER > 17
        -:   37:    typedef contiguous_iterator_tag                                    iterator_concept;
        -:   38:#endif
        -:   39:
        -:   40:private:
        -:   41:    iterator_type __i;
        -:   42:public:
        -:   43:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter() _NOEXCEPT
        -:   44:                : __i()
        -:   45:    {
        -:   46:        _VSTD::__debug_db_insert_i(this);
        -:   47:    }
        -:   48:    template <class _Up> _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
function _ZNSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEC1B6v15006IPS2_EERKNS0_IT_EEPNS_9enable_ifIXsr14is_convertibleIS8_S4_EE5valueEvE4typeE called 9 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPKPN7doctest9IReporterEEC1B6v15006IPS3_EERKNS0_IT_EEPNS_9enable_ifIXsr14is_convertibleIS9_S5_EE5valueEvE4typeE called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEC2B6v15006IPS2_EERKNS0_IT_EEPNS_9enable_ifIXsr14is_convertibleIS8_S4_EE5valueEvE4typeE called 9 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPKPN7doctest9IReporterEEC2B6v15006IPS3_EERKNS0_IT_EEPNS_9enable_ifIXsr14is_convertibleIS9_S5_EE5valueEvE4typeE called 0 returned 0% blocks executed 0%
       18:   49:        __wrap_iter(const __wrap_iter<_Up>& __u,
        -:   50:            typename enable_if<is_convertible<_Up, iterator_type>::value>::type* = nullptr) _NOEXCEPT
        9:   51:            : __i(__u.base())
        9:   52:    {
        -:   53:#ifdef _LIBCPP_ENABLE_DEBUG_MODE
        -:   54:      if (!__libcpp_is_constant_evaluated())
        -:   55:        __get_db()->__iterator_copy(this, _VSTD::addressof(__u));
        -:   56:#endif
       18:   57:    }
        9:   57-block  0
    $$$$$:   57-block  1
        9:   57-block  2
    $$$$$:   57-block  3
        -:   58:#ifdef _LIBCPP_ENABLE_DEBUG_MODE
        -:   59:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:   60:    __wrap_iter(const __wrap_iter& __x)
        -:   61:        : __i(__x.base())
        -:   62:    {
        -:   63:      if (!__libcpp_is_constant_evaluated())
        -:   64:        __get_db()->__iterator_copy(this, _VSTD::addressof(__x));
        -:   65:    }
        -:   66:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:   67:    __wrap_iter& operator=(const __wrap_iter& __x)
        -:   68:    {
        -:   69:        if (this != _VSTD::addressof(__x))
        -:   70:        {
        -:   71:            if (!__libcpp_is_constant_evaluated())
        -:   72:                __get_db()->__iterator_copy(this, _VSTD::addressof(__x));
        -:   73:            __i = __x.__i;
        -:   74:        }
        -:   75:        return *this;
        -:   76:    }
        -:   77:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17
        -:   78:    ~__wrap_iter()
        -:   79:    {
        -:   80:      if (!__libcpp_is_constant_evaluated())
        -:   81:        __get_db()->__erase_i(this);
        -:   82:    }
        -:   83:#endif
function _ZNKSt3__111__wrap_iterIPPN7doctest9IReporterEEdeB6v15006Ev called 63 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPNS_6vectorIN7doctest6StringENS_9allocatorIS3_EEEEEdeB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__111__wrap_iterIPPKN7doctest6detail8TestCaseEEdeB6v15006Ev called 1 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPKN7doctest6StringEEdeB6v15006Ev called 3 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEdeB6v15006Ev called 25 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPN7doctest16SubcaseSignatureEEdeB6v15006Ev called 3 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPPKN7doctest6detail20IExceptionTranslatorEEdeB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__111__wrap_iterIPN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData13JUnitTestCaseEEdeB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__111__wrap_iterIPKN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData16JUnitTestMessageEEdeB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__111__wrap_iterIPN7doctest6StringEEdeB6v15006Ev called 0 returned 0% blocks executed 0%
       95:   84:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 reference operator*() const _NOEXCEPT
        -:   85:    {
        -:   86:        _LIBCPP_DEBUG_ASSERT(__get_const_db()->__dereferenceable(this),
        -:   87:                             "Attempted to dereference a non-dereferenceable iterator");
       95:   88:        return *__i;
       63:   88-block  0
    $$$$$:   88-block  1
        1:   88-block  2
        3:   88-block  3
       25:   88-block  4
        3:   88-block  5
    $$$$$:   88-block  6
    $$$$$:   88-block  7
    $$$$$:   88-block  8
    $$$$$:   88-block  9
        -:   89:    }
        -:   90:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 pointer operator->() const _NOEXCEPT
        -:   91:    {
        -:   92:        _LIBCPP_DEBUG_ASSERT(__get_const_db()->__dereferenceable(this),
        -:   93:                             "Attempted to dereference a non-dereferenceable iterator");
        -:   94:        return _VSTD::__to_address(__i);
        -:   95:    }
function _ZNSt3__111__wrap_iterIPPN7doctest9IReporterEEppB6v15006Ev called 63 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPNS_6vectorIN7doctest6StringENS_9allocatorIS3_EEEEEppB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPPKN7doctest6detail8TestCaseEEppB6v15006Ev called 1 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPKN7doctest6StringEEppB6v15006Ev called 2 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEppB6v15006Ev called 25 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPN7doctest16SubcaseSignatureEEppB6v15006Ev called 3 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPPKN7doctest6detail20IExceptionTranslatorEEppB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPKN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData16JUnitTestMessageEEppB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData13JUnitTestCaseEEppB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPN7doctest6StringEEppB6v15006Ev called 0 returned 0% blocks executed 0%
       94:   96:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter& operator++() _NOEXCEPT
        -:   97:    {
        -:   98:        _LIBCPP_DEBUG_ASSERT(__get_const_db()->__dereferenceable(this),
        -:   99:                             "Attempted to increment a non-incrementable iterator");
       94:  100:        ++__i;
       94:  101:        return *this;
       63:  101-block  0
    $$$$$:  101-block  1
        1:  101-block  2
        2:  101-block  3
       25:  101-block  4
        3:  101-block  5
    $$$$$:  101-block  6
    $$$$$:  101-block  7
    $$$$$:  101-block  8
    $$$$$:  101-block  9
        -:  102:    }
function _ZNSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEppB6v15006Ei called 3 returned 100% blocks executed 100%
        3:  103:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter  operator++(int) _NOEXCEPT
        3:  104:        {__wrap_iter __tmp(*this); ++(*this); return __tmp;}
        3:  104-block  0
        -:  105:
        -:  106:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter& operator--() _NOEXCEPT
        -:  107:    {
        -:  108:        _LIBCPP_DEBUG_ASSERT(__get_const_db()->__decrementable(this),
        -:  109:                             "Attempted to decrement a non-decrementable iterator");
        -:  110:        --__i;
        -:  111:        return *this;
        -:  112:    }
        -:  113:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter  operator--(int) _NOEXCEPT
        -:  114:        {__wrap_iter __tmp(*this); --(*this); return __tmp;}
function _ZNKSt3__111__wrap_iterIPN7doctest16SubcaseSignatureEEplB6v15006El called 9 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEplB6v15006El called 9 returned 100% blocks executed 100%
       18:  115:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter  operator+ (difference_type __n) const _NOEXCEPT
       18:  116:        {__wrap_iter __w(*this); __w += __n; return __w;}
        9:  116-block  0
        9:  116-block  1
function _ZNSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEpLB6v15006El called 9 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPN7doctest16SubcaseSignatureEEpLB6v15006El called 12 returned 100% blocks executed 100%
       21:  117:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter& operator+=(difference_type __n) _NOEXCEPT
        -:  118:    {
        -:  119:        _LIBCPP_DEBUG_ASSERT(__get_const_db()->__addable(this, __n),
        -:  120:                             "Attempted to add/subtract an iterator outside its valid range");
       21:  121:        __i += __n;
       21:  122:        return *this;
        9:  122-block  0
       12:  122-block  1
        -:  123:    }
        -:  124:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter  operator- (difference_type __n) const _NOEXCEPT
        -:  125:        {return *this + (-__n);}
        -:  126:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 __wrap_iter& operator-=(difference_type __n) _NOEXCEPT
        -:  127:        {*this += -__n; return *this;}
        -:  128:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 reference    operator[](difference_type __n) const _NOEXCEPT
        -:  129:    {
        -:  130:        _LIBCPP_DEBUG_ASSERT(__get_const_db()->__subscriptable(this, __n),
        -:  131:                             "Attempted to subscript an iterator outside its valid range");
        -:  132:        return __i[__n];
        -:  133:    }
        -:  134:
function _ZNKSt3__111__wrap_iterIPKN7doctest6StringEE4baseB6v15006Ev called 66 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPPN7doctest9IReporterEE4baseB6v15006Ev called 252 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEE4baseB6v15006Ev called 103 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPN7doctest16SubcaseSignatureEE4baseB6v15006Ev called 48 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPPKN7doctest6detail20IExceptionTranslatorEE4baseB6v15006Ev called 2 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPNS_6vectorIN7doctest6StringENS_9allocatorIS3_EEEEE4baseB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__111__wrap_iterIPKPN7doctest9IReporterEE4baseB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__111__wrap_iterIPPKN7doctest6detail8TestCaseEE4baseB6v15006Ev called 6 returned 100% blocks executed 100%
function _ZNKSt3__111__wrap_iterIPN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData13JUnitTestCaseEE4baseB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__111__wrap_iterIPKN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData16JUnitTestMessageEE4baseB6v15006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__111__wrap_iterIPN7doctest6StringEE4baseB6v15006Ev called 0 returned 0% blocks executed 0%
      477:  135:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11 iterator_type base() const _NOEXCEPT {return __i;}
       66:  135-block  0
      252:  135-block  1
      103:  135-block  2
       48:  135-block  3
        2:  135-block  4
    $$$$$:  135-block  5
    $$$$$:  135-block  6
        6:  135-block  7
    $$$$$:  135-block  8
    $$$$$:  135-block  9
    $$$$$:  135-block 10
        -:  136:
        -:  137:private:
        -:  138:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
function _ZNSt3__111__wrap_iterIPKN7doctest6StringEEC1B6v15006EPKvS4_ called 62 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPKN7doctest6StringEEC2B6v15006EPKvS4_ called 62 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPPN7doctest9IReporterEEC1B6v15006EPKvS4_ called 126 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPPN7doctest9IReporterEEC2B6v15006EPKvS4_ called 126 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEC1B6v15006EPKvS4_ called 44 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPKN7doctest16SubcaseSignatureEEC2B6v15006EPKvS4_ called 44 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPN7doctest16SubcaseSignatureEEC1B6v15006EPKvS3_ called 45 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPN7doctest16SubcaseSignatureEEC2B6v15006EPKvS3_ called 45 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPPKN7doctest6detail20IExceptionTranslatorEEC1B6v15006EPKvS6_ called 2 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPPKN7doctest6detail20IExceptionTranslatorEEC2B6v15006EPKvS6_ called 2 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPNS_6vectorIN7doctest6StringENS_9allocatorIS3_EEEEEC1B6v15006EPKvS7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPNS_6vectorIN7doctest6StringENS_9allocatorIS3_EEEEEC2B6v15006EPKvS7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPPKN7doctest6detail8TestCaseEEC1B6v15006EPKvS6_ called 4 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPPKN7doctest6detail8TestCaseEEC2B6v15006EPKvS6_ called 4 returned 100% blocks executed 100%
function _ZNSt3__111__wrap_iterIPN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData13JUnitTestCaseEEC1B6v15006EPKvS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData13JUnitTestCaseEEC2B6v15006EPKvS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPKN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData16JUnitTestMessageEEC1B6v15006EPKvS7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPKN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData16JUnitTestMessageEEC2B6v15006EPKvS7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPN7doctest6StringEEC1B6v15006EPKvS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__111__wrap_iterIPN7doctest6StringEEC2B6v15006EPKvS3_ called 0 returned 0% blocks executed 0%
      566:  139:    explicit __wrap_iter(const void* __p, iterator_type __x) _NOEXCEPT : __i(__x)
      283:  140:    {
        -:  141:        (void)__p;
        -:  142:#ifdef _LIBCPP_ENABLE_DEBUG_MODE
        -:  143:      if (!__libcpp_is_constant_evaluated())
        -:  144:        __get_db()->__insert_ic(this, __p);
        -:  145:#endif
      566:  146:    }
       62:  146-block  0
       62:  146-block  1
      126:  146-block  2
      126:  146-block  3
       44:  146-block  4
       44:  146-block  5
       45:  146-block  6
       45:  146-block  7
        2:  146-block  8
        2:  146-block  9
    $$$$$:  146-block 10
    $$$$$:  146-block 11
        4:  146-block 12
        4:  146-block 13
    $$$$$:  146-block 14
    $$$$$:  146-block 15
    $$$$$:  146-block 16
    $$$$$:  146-block 17
    $$$$$:  146-block 18
    $$$$$:  146-block 19
        -:  147:
        -:  148:    template <class _Up> friend class __wrap_iter;
        -:  149:    template <class _CharT, class _Traits, class _Alloc> friend class basic_string;
        -:  150:    template <class _Tp, class _Alloc> friend class _LIBCPP_TEMPLATE_VIS vector;
        -:  151:    template <class _Tp, size_t> friend class _LIBCPP_TEMPLATE_VIS span;
        -:  152:};
        -:  153:
        -:  154:template <class _Iter1>
        -:  155:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
function _ZNSt3__1eqB6v15006IPPKN7doctest6detail20IExceptionTranslatorEEEbRKNS_11__wrap_iterIT_EESB_ called 1 returned 100% blocks executed 100%
function _ZNSt3__1eqB6v15006IPKN7doctest6StringEEEbRKNS_11__wrap_iterIT_EES9_ called 33 returned 100% blocks executed 100%
function _ZNSt3__1eqB6v15006IPPN7doctest9IReporterEEEbRKNS_11__wrap_iterIT_EES9_ called 126 returned 100% blocks executed 100%
function _ZNSt3__1eqB6v15006IPKN7doctest16SubcaseSignatureEEEbRKNS_11__wrap_iterIT_EES9_ called 47 returned 100% blocks executed 100%
function _ZNSt3__1eqB6v15006IPN7doctest16SubcaseSignatureEEEbRKNS_11__wrap_iterIT_EES8_ called 6 returned 100% blocks executed 100%
function _ZNSt3__1eqB6v15006IPNS_6vectorIN7doctest6StringENS_9allocatorIS3_EEEEEEbRKNS_11__wrap_iterIT_EESC_ called 0 returned 0% blocks executed 0%
function _ZNSt3__1eqB6v15006IPPKN7doctest6detail8TestCaseEEEbRKNS_11__wrap_iterIT_EESB_ called 2 returned 100% blocks executed 100%
function _ZNSt3__1eqB6v15006IPN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData13JUnitTestCaseEEEbRKNS_11__wrap_iterIT_EESB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__1eqB6v15006IPKN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData16JUnitTestMessageEEEbRKNS_11__wrap_iterIT_EESC_ called 0 returned 0% blocks executed 0%
function _ZNSt3__1eqB6v15006IPN7doctest6StringEEEbRKNS_11__wrap_iterIT_EES8_ called 0 returned 0% blocks executed 0%
      215:  156:bool operator==(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter1>& __y) _NOEXCEPT
        -:  157:{
      215:  158:    return __x.base() == __y.base();
        1:  158-block  0
       33:  158-block  1
      126:  158-block  2
       47:  158-block  3
        6:  158-block  4
    $$$$$:  158-block  5
        2:  158-block  6
    $$$$$:  158-block  7
    $$$$$:  158-block  8
    $$$$$:  158-block  9
        -:  159:}
        -:  160:
        -:  161:template <class _Iter1, class _Iter2>
        -:  162:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:  163:bool operator==(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter2>& __y) _NOEXCEPT
        -:  164:{
        -:  165:    return __x.base() == __y.base();
        -:  166:}
        -:  167:
        -:  168:template <class _Iter1>
        -:  169:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:  170:bool operator<(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter1>& __y) _NOEXCEPT
        -:  171:{
        -:  172:    _LIBCPP_DEBUG_ASSERT(__get_const_db()->__less_than_comparable(_VSTD::addressof(__x), _VSTD::addressof(__y)),
        -:  173:                         "Attempted to compare incomparable iterators");
        -:  174:    return __x.base() < __y.base();
        -:  175:}
        -:  176:
        -:  177:template <class _Iter1, class _Iter2>
        -:  178:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:  179:bool operator<(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter2>& __y) _NOEXCEPT
        -:  180:{
        -:  181:    _LIBCPP_DEBUG_ASSERT(__get_const_db()->__less_than_comparable(&__x, &__y),
        -:  182:                         "Attempted to compare incomparable iterators");
        -:  183:    return __x.base() < __y.base();
        -:  184:}
        -:  185:
        -:  186:template <class _Iter1>
        -:  187:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
function _ZNSt3__1neB6v15006IPPN7doctest9IReporterEEEbRKNS_11__wrap_iterIT_EES9_ called 126 returned 100% blocks executed 100%
function _ZNSt3__1neB6v15006IPNS_6vectorIN7doctest6StringENS_9allocatorIS3_EEEEEEbRKNS_11__wrap_iterIT_EESC_ called 0 returned 0% blocks executed 0%
function _ZNSt3__1neB6v15006IPPKN7doctest6detail8TestCaseEEEbRKNS_11__wrap_iterIT_EESB_ called 2 returned 100% blocks executed 100%
function _ZNSt3__1neB6v15006IPKN7doctest6StringEEEbRKNS_11__wrap_iterIT_EES9_ called 33 returned 100% blocks executed 100%
function _ZNSt3__1neB6v15006IPKN7doctest16SubcaseSignatureEEEbRKNS_11__wrap_iterIT_EES9_ called 47 returned 100% blocks executed 100%
function _ZNSt3__1neB6v15006IPN7doctest16SubcaseSignatureEEEbRKNS_11__wrap_iterIT_EES8_ called 6 returned 100% blocks executed 100%
function _ZNSt3__1neB6v15006IPPKN7doctest6detail20IExceptionTranslatorEEEbRKNS_11__wrap_iterIT_EESB_ called 1 returned 100% blocks executed 100%
function _ZNSt3__1neB6v15006IPN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData13JUnitTestCaseEEEbRKNS_11__wrap_iterIT_EESB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__1neB6v15006IPKN7doctest12_GLOBAL__N_113JUnitReporter17JUnitTestCaseData16JUnitTestMessageEEEbRKNS_11__wrap_iterIT_EESC_ called 0 returned 0% blocks executed 0%
function _ZNSt3__1neB6v15006IPN7doctest6StringEEEbRKNS_11__wrap_iterIT_EES8_ called 0 returned 0% blocks executed 0%
      215:  188:bool operator!=(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter1>& __y) _NOEXCEPT
        -:  189:{
      215:  190:    return !(__x == __y);
      126:  190-block  0
    $$$$$:  190-block  1
        2:  190-block  2
       33:  190-block  3
       47:  190-block  4
        6:  190-block  5
        1:  190-block  6
    $$$$$:  190-block  7
    $$$$$:  190-block  8
    $$$$$:  190-block  9
        -:  191:}
        -:  192:
        -:  193:template <class _Iter1, class _Iter2>
        -:  194:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:  195:bool operator!=(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter2>& __y) _NOEXCEPT
        -:  196:{
        -:  197:    return !(__x == __y);
        -:  198:}
        -:  199:
        -:  200:template <class _Iter1>
        -:  201:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:  202:bool operator>(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter1>& __y) _NOEXCEPT
        -:  203:{
        -:  204:    return __y < __x;
        -:  205:}
        -:  206:
        -:  207:template <class _Iter1, class _Iter2>
        -:  208:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:  209:bool operator>(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter2>& __y) _NOEXCEPT
        -:  210:{
        -:  211:    return __y < __x;
        -:  212:}
        -:  213:
        -:  214:template <class _Iter1>
        -:  215:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:  216:bool operator>=(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter1>& __y) _NOEXCEPT
        -:  217:{
        -:  218:    return !(__x < __y);
        -:  219:}
        -:  220:
        -:  221:template <class _Iter1, class _Iter2>
        -:  222:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:  223:bool operator>=(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter2>& __y) _NOEXCEPT
        -:  224:{
        -:  225:    return !(__x < __y);
        -:  226:}
        -:  227:
        -:  228:template <class _Iter1>
        -:  229:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:  230:bool operator<=(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter1>& __y) _NOEXCEPT
        -:  231:{
        -:  232:    return !(__y < __x);
        -:  233:}
        -:  234:
        -:  235:template <class _Iter1, class _Iter2>
        -:  236:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
        -:  237:bool operator<=(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter2>& __y) _NOEXCEPT
        -:  238:{
        -:  239:    return !(__y < __x);
        -:  240:}
        -:  241:
        -:  242:template <class _Iter1, class _Iter2>
        -:  243:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:  244:#ifndef _LIBCPP_CXX03_LANG
function _ZNSt3__1miB6v15006IPKN7doctest16SubcaseSignatureEPS2_EEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_11__wrap_iterIT_EERKNS7_IT0_EE called 9 returned 100% blocks executed 100%
function _ZNSt3__1miB6v15006IPN7doctest16SubcaseSignatureES3_EEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_11__wrap_iterIT_EERKNS5_IT0_EE called 9 returned 100% blocks executed 100%
function _ZNSt3__1miB6v15006IPKPN7doctest9IReporterEPS3_EEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_11__wrap_iterIT_EERKNS8_IT0_EE called 0 returned 0% blocks executed 0%
       18:  245:auto operator-(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter2>& __y) _NOEXCEPT
        -:  246:    -> decltype(__x.base() - __y.base())
        -:  247:#else
        -:  248:typename __wrap_iter<_Iter1>::difference_type
        -:  249:operator-(const __wrap_iter<_Iter1>& __x, const __wrap_iter<_Iter2>& __y) _NOEXCEPT
        -:  250:#endif // C++03
        -:  251:{
        -:  252:    _LIBCPP_DEBUG_ASSERT(__get_const_db()->__less_than_comparable(_VSTD::addressof(__x), _VSTD::addressof(__y)),
        -:  253:                         "Attempted to subtract incompatible iterators");
       18:  254:    return __x.base() - __y.base();
        9:  254-block  0
        9:  254-block  1
    $$$$$:  254-block  2
        -:  255:}
        -:  256:
        -:  257:template <class _Iter1>
        -:  258:_LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX11
        -:  259:__wrap_iter<_Iter1> operator+(typename __wrap_iter<_Iter1>::difference_type __n, __wrap_iter<_Iter1> __x) _NOEXCEPT
        -:  260:{
        -:  261:    __x += __n;
        -:  262:    return __x;
        -:  263:}
        -:  264:
        -:  265:#if _LIBCPP_STD_VER <= 17
        -:  266:template <class _It>
        -:  267:struct __is_cpp17_contiguous_iterator<__wrap_iter<_It> > : true_type {};
        -:  268:#endif
        -:  269:
        -:  270:template <class _It>
        -:  271:struct _LIBCPP_TEMPLATE_VIS pointer_traits<__wrap_iter<_It> >
        -:  272:{
        -:  273:    typedef __wrap_iter<_It> pointer;
        -:  274:    typedef typename pointer_traits<_It>::element_type element_type;
        -:  275:    typedef typename pointer_traits<_It>::difference_type difference_type;
        -:  276:
        -:  277:    _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR
function _ZNSt3__114pointer_traitsINS_11__wrap_iterIPN7doctest16SubcaseSignatureEEEE10to_addressB6v15006ES5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114pointer_traitsINS_11__wrap_iterIPPKN7doctest6detail8TestCaseEEEE10to_addressB6v15006ES8_ called 2 returned 100% blocks executed 100%
        2:  278:    static element_type *to_address(pointer __w) _NOEXCEPT {
        2:  279:        return _VSTD::__to_address(__w.base());
    $$$$$:  279-block  0
        2:  279-block  1
        -:  280:    }
        -:  281:};
        -:  282:
        -:  283:_LIBCPP_END_NAMESPACE_STD
        -:  284:
        -:  285:#endif // _LIBCPP___ITERATOR_WRAP_ITER_H
