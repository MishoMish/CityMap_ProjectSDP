        -:    0:Source:/Users/mihaildobroslavski/CLionProjects/CityMapProject/UnitTesting/GraphTest.cpp
        -:    0:Graph:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/GraphTest.dir/UnitTesting/GraphTest.cpp.gcno
        -:    0:Data:/Users/mihaildobroslavski/CLionProjects/CityMapProject/cmake-build-debug-coverage/CMakeFiles/GraphTest.dir/UnitTesting/GraphTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by Mihail Dobroslavski on 30.12.23.
        -:    3://
        -:    4:
        -:    5:#define DOCTEST_CONFIG_IMPLEMENT
        -:    6:
        -:    7:#include "doctest.h"
        -:    8:#include "../Structure/Graph.h"
        -:    9:
function _ZL20DOCTEST_ANON_FUNC_14v called 5 returned 100% blocks executed 53%
        6:   10:TEST_CASE("Graph Test") {
        1:   10-block  0
branch  0 taken 1
branch  1 taken 0
        1:   10-block  1
branch  2 taken 1
branch  3 taken 0
        1:   10-block  2
branch  4 taken 1
branch  5 taken 0
        1:   10-block  3
    $$$$$:   10-block  4
    $$$$$:   10-block  5
    $$$$$:   10-block  6
    $$$$$:   10-block  7
        5:   11:    Graph graph("CityA");
        5:   11-block  0
branch  0 taken 5
branch  1 taken 0
    $$$$$:   11-block  1
    $$$$$:   11-block  2
        -:   12:
        6:   13:    SUBCASE("Correct Creation Test") {
        5:   13-block  0
branch  0 taken 5
branch  1 taken 0
        5:   13-block  1
branch  2 taken 5
branch  3 taken 0
        5:   13-block  2
branch  4 taken 4
branch  5 taken 1
    $$$$$:   13-block  3
    $$$$$:   13-block  4
        1:   14:        CHECK(graph.getName() == "CityA");
        1:   14-block  0
        1:   14-block  1
branch  0 taken 1
branch  1 taken 0
        1:   14-block  2
branch  2 taken 0
branch  3 taken 1
        1:   14-block  3
branch  4 taken 1
branch  5 taken 0
        1:   14-block  4
branch  6 taken 1
branch  7 taken 0
        1:   14-block  5
branch  8 taken 1
branch  9 taken 0
        1:   14-block  6
branch 10 taken 0
branch 11 taken 1
        1:   14-block  7
    $$$$$:   14-block  8
    $$$$$:   14-block  9
    $$$$$:   14-block 10
    $$$$$:   14-block 11
branch 12 never executed
branch 13 never executed
    $$$$$:   14-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   14-block 13
        1:   14-block 14
branch 16 taken 1
branch 17 taken 0
        1:   14-block 15
branch 18 taken 0
branch 19 taken 1
    $$$$$:   14-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   14-block 17
    $$$$$:   14-block 18
branch 22 never executed
branch 23 never executed
    $$$$$:   14-block 19
        1:   14-block 20
branch 24 taken 1
branch 25 taken 0
        1:   14-block 21
        1:   14-block 22
    $$$$$:   14-block 23
    $$$$$:   14-block 24
        1:   15:        REQUIRE(graph.getAdjacencyList().empty());
        1:   15-block  0
        1:   15-block  1
branch  0 taken 1
branch  1 taken 0
        1:   15-block  2
branch  2 taken 1
branch  3 taken 0
        1:   15-block  3
branch  4 taken 1
branch  5 taken 0
        1:   15-block  4
branch  6 taken 1
branch  7 taken 0
        1:   15-block  5
branch  8 taken 1
branch  9 taken 0
        1:   15-block  6
branch 10 taken 0
branch 11 taken 1
        1:   15-block  7
    $$$$$:   15-block  8
    $$$$$:   15-block  9
    $$$$$:   15-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   15-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   15-block 12
        1:   15-block 13
branch 16 taken 1
branch 17 taken 0
        1:   15-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   15-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   15-block 16
    $$$$$:   15-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   15-block 18
        1:   15-block 19
branch 24 taken 1
branch 25 taken 0
        1:   15-block 20
        1:   15-block 21
    $$$$$:   15-block 22
        1:   16:    }
        1:   16-block  0
        -:   17:
        6:   18:    SUBCASE("Print Test - Empty") {
        5:   18-block  0
branch  0 taken 5
branch  1 taken 0
        5:   18-block  1
branch  2 taken 5
branch  3 taken 0
        5:   18-block  2
branch  4 taken 4
branch  5 taken 1
    $$$$$:   18-block  3
    $$$$$:   18-block  4
        1:   19:        graph.print();
        1:   19-block  0
branch  0 taken 1
branch  1 taken 0
        1:   20:    }
        1:   20-block  0
        -:   21:
        6:   22:    SUBCASE("Print Test - contains element") {
        5:   22-block  0
branch  0 taken 5
branch  1 taken 0
        5:   22-block  1
branch  2 taken 5
branch  3 taken 0
        5:   22-block  2
branch  4 taken 4
branch  5 taken 1
    $$$$$:   22-block  3
    $$$$$:   22-block  4
        1:   23:        Graph graph2("CityB");
        1:   23-block  0
branch  0 taken 1
branch  1 taken 0
        1:   23-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   23-block  2
        1:   24:        graph.addEdge(&graph2, 1);
        1:   24-block  0
branch  0 taken 1
branch  1 taken 0
        1:   25:        graph.print();
        1:   25-block  0
branch  0 taken 1
branch  1 taken 0
        1:   26:    }
        1:   26-block  0
    $$$$$:   26-block  1
        -:   27:
        6:   28:    SUBCASE("Add Edge + Get Adjacency Test") {
        5:   28-block  0
branch  0 taken 5
branch  1 taken 0
        5:   28-block  1
branch  2 taken 5
branch  3 taken 0
        5:   28-block  2
branch  4 taken 4
branch  5 taken 1
    $$$$$:   28-block  3
    $$$$$:   28-block  4
        1:   29:        Graph toGraph("CityB");
        1:   29-block  0
branch  0 taken 1
branch  1 taken 0
        1:   29-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   29-block  2
        1:   30:        graph.addEdge(&toGraph, 50.0);
        1:   30-block  0
branch  0 taken 1
branch  1 taken 0
        -:   31:
        1:   32:        const auto &adjList = graph.getAdjacencyList();
        1:   32-block  0
branch  0 taken 1
branch  1 taken 0
        1:   33:        REQUIRE(adjList.size() == 1);
        1:   33-block  0
        1:   33-block  1
branch  0 taken 1
branch  1 taken 0
        1:   33-block  2
branch  2 taken 1
branch  3 taken 0
        1:   33-block  3
branch  4 taken 1
branch  5 taken 0
        1:   33-block  4
branch  6 taken 1
branch  7 taken 0
        1:   33-block  5
branch  8 taken 1
branch  9 taken 0
        1:   33-block  6
    $$$$$:   33-block  7
    $$$$$:   33-block  8
    $$$$$:   33-block  9
branch 10 never executed
branch 11 never executed
    $$$$$:   33-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   33-block 11
        1:   33-block 12
branch 14 taken 1
branch 15 taken 0
        1:   33-block 13
branch 16 taken 0
branch 17 taken 1
    $$$$$:   33-block 14
branch 18 never executed
branch 19 never executed
    $$$$$:   33-block 15
    $$$$$:   33-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   33-block 17
        1:   33-block 18
branch 22 taken 1
branch 23 taken 0
        1:   33-block 19
        1:   33-block 20
    $$$$$:   33-block 21
        1:   34:        REQUIRE(adjList.begin()->first->getName() == "CityB");
        1:   34-block  0
        1:   34-block  1
branch  0 taken 1
branch  1 taken 0
        1:   34-block  2
branch  2 taken 1
branch  3 taken 0
        1:   34-block  3
branch  4 taken 1
branch  5 taken 0
        1:   34-block  4
branch  6 taken 1
branch  7 taken 0
        1:   34-block  5
branch  8 taken 1
branch  9 taken 0
        1:   34-block  6
branch 10 taken 1
branch 11 taken 0
        1:   34-block  7
branch 12 taken 1
branch 13 taken 0
        1:   34-block  8
    $$$$$:   34-block  9
    $$$$$:   34-block 10
    $$$$$:   34-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   34-block 12
branch 16 never executed
branch 17 never executed
    $$$$$:   34-block 13
        1:   34-block 14
branch 18 taken 1
branch 19 taken 0
        1:   34-block 15
branch 20 taken 0
branch 21 taken 1
    $$$$$:   34-block 16
branch 22 never executed
branch 23 never executed
    $$$$$:   34-block 17
    $$$$$:   34-block 18
branch 24 never executed
branch 25 never executed
    $$$$$:   34-block 19
        1:   34-block 20
branch 26 taken 1
branch 27 taken 0
        1:   34-block 21
        1:   34-block 22
    $$$$$:   34-block 23
        1:   35:        REQUIRE(adjList.begin()->second == 50.0);
        1:   35-block  0
        1:   35-block  1
branch  0 taken 1
branch  1 taken 0
        1:   35-block  2
branch  2 taken 1
branch  3 taken 0
        1:   35-block  3
branch  4 taken 1
branch  5 taken 0
        1:   35-block  4
branch  6 taken 1
branch  7 taken 0
        1:   35-block  5
branch  8 taken 1
branch  9 taken 0
        1:   35-block  6
branch 10 taken 1
branch 11 taken 0
        1:   35-block  7
    $$$$$:   35-block  8
    $$$$$:   35-block  9
    $$$$$:   35-block 10
branch 12 never executed
branch 13 never executed
    $$$$$:   35-block 11
branch 14 never executed
branch 15 never executed
    $$$$$:   35-block 12
        1:   35-block 13
branch 16 taken 1
branch 17 taken 0
        1:   35-block 14
branch 18 taken 0
branch 19 taken 1
    $$$$$:   35-block 15
branch 20 never executed
branch 21 never executed
    $$$$$:   35-block 16
    $$$$$:   35-block 17
branch 22 never executed
branch 23 never executed
    $$$$$:   35-block 18
        1:   35-block 19
branch 24 taken 1
branch 25 taken 0
        1:   35-block 20
        1:   35-block 21
    $$$$$:   35-block 22
        1:   36:    }
        1:   36-block  0
    $$$$$:   36-block  1
        -:   37:
        6:   38:    SUBCASE("Get Name Test") {
        5:   38-block  0
branch  0 taken 5
branch  1 taken 0
        5:   38-block  1
branch  2 taken 0
branch  3 taken 5
        5:   38-block  2
branch  4 taken 4
branch  5 taken 1
    $$$$$:   38-block  3
    $$$$$:   38-block  4
        1:   39:        CHECK(graph.getName() == "CityA");
        1:   39-block  0
        1:   39-block  1
branch  0 taken 1
branch  1 taken 0
        1:   39-block  2
branch  2 taken 1
branch  3 taken 0
        1:   39-block  3
branch  4 taken 1
branch  5 taken 0
        1:   39-block  4
branch  6 taken 1
branch  7 taken 0
        1:   39-block  5
branch  8 taken 1
branch  9 taken 0
        1:   39-block  6
branch 10 taken 0
branch 11 taken 1
        1:   39-block  7
    $$$$$:   39-block  8
    $$$$$:   39-block  9
    $$$$$:   39-block 10
    $$$$$:   39-block 11
branch 12 never executed
branch 13 never executed
    $$$$$:   39-block 12
branch 14 never executed
branch 15 never executed
    $$$$$:   39-block 13
        1:   39-block 14
branch 16 taken 1
branch 17 taken 0
        1:   39-block 15
branch 18 taken 0
branch 19 taken 1
    $$$$$:   39-block 16
branch 20 never executed
branch 21 never executed
    $$$$$:   39-block 17
    $$$$$:   39-block 18
branch 22 never executed
branch 23 never executed
    $$$$$:   39-block 19
        1:   39-block 20
branch 24 taken 1
branch 25 taken 0
        1:   39-block 21
        1:   39-block 22
    $$$$$:   39-block 23
        1:   40:    }
        1:   40-block  0
        5:   41:}
    $$$$$:   41-block  0
    $$$$$:   41-block  1
    $$$$$:   41-block  2
    $$$$$:   41-block  3
    $$$$$:   41-block  4
    $$$$$:   41-block  5
    $$$$$:   41-block  6
    $$$$$:   41-block  7
    $$$$$:   41-block  8
    $$$$$:   41-block  9
    $$$$$:   41-block 10
    $$$$$:   41-block 11
    $$$$$:   41-block 12
    $$$$$:   41-block 13
    $$$$$:   41-block 14
    $$$$$:   41-block 15
        5:   41-block 16
    $$$$$:   41-block 17
        -:   42:
function main called 1 returned 100% blocks executed 50%
        1:   43:int main(int argc, char *argv[]) {
        1:   44:    doctest::Context context(argc, argv);
        1:   45:    return context.run();
        1:   45-block  0
branch  0 taken 1
branch  1 taken 0
        1:   46:}
        1:   46-block  0
    $$$$$:   46-block  1
    $$$$$:   46-block  2
